<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LightningReview.ExtensionFramework</name>
    </assembly>
    <members>
        <member name="T:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker">
            <summary>
            日付設定用コントロール
            </summary>
            <summary>
            DateTimePicker
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.ONE_WEEK_NUMBER">
            <summary>
            1週間の日数を表す値
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.TWO_WEEKS_NUMBER">
            <summary>
            2週間の日数を表す値
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.EMPTY_COUNT">
            <summary>
            コレクションが空の時の値
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.REMOVEIETM_COUNT">
            <summary>
            カレンダで選択されなかったアイテムの値
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.m_CalendarCollection">
            <summary>
            日付のコレクション
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.m_IsSelectingDateByCode">
            <summary>
            コードによるに日付選択状態にあるか
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.SelectedDateTimeProperty">
            <summary>
            設定している日付を設定・取得する
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.CanClearProperty">
            <summary>
            日付のクリアが可能かどうかを設定・取得する
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.NullValueTextProperty">
            <summary>
            設定している日付がnullである場合に表示するテキスト
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.SelectedDateTime">
            <summary>
            設定している日付を設定・取得する
            （これは依存関係プロパティです）
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.CalendarCollection">
            <summary>
            日付のコレクション（カレンダー表示のためのコレクション）
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.CanClear">
            <summary>
            日付のクリアが可能かどうかを設定・取得する
            (これは依存関係プロパティです)
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.NullValueText">
            <summary>
            設定している日付がnullである場合に表示するテキスト
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.SetTwoWeeksDateFromTargetDate(System.Nullable{System.DateTime})">
            <summary>
            対象日を含む週と次週の日付をカレンダーコレクションに設定する
            </summary>
            <param name="targetDate">基準としたい対象日</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.SetAntetiorTwoWeeksDate">
            <summary>
            現在表示しているよりも前の2週間の日付をカレンダーコレクションに設定する
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.SetPosteriorTwoWeeksDate">
            <summary>
            現在表示しているよりも後の2週間の日付をカレンダーコレクションに設定する
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.CreateCalendar">
            <summary>
            選択されている日付を含む週と次週のカレンダーを作成し、日付を選択状態にする
            日付が選択されていなければ、未選択状態とする
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.SelectTargetDate(System.Nullable{System.DateTime})">
            <summary>
            指定した日付を選択状態にする
            </summary>
            <param name="targetDate"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.m_DateTimeSettingButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            日付設定用ボタン押下時のハンドラ
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.OnPopupClosed(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            ポップアップを閉じるためのハンドラ
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.m_LeftRepeatButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            左リピートボタン押下時のハンドラ
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.m_RightRepeatButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            右リピートボタン押下時のハンドラ
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.m_ClearButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            クリアボタン押下時のハンドラ
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.m_CalendarList_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            日付リストの選択状態変更時のハンドラ
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.m_CalendarPopup_Opened(System.Object,System.EventArgs)">
            <summary>
            ポップアップが開いたときのハンドラ
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.m_CalendarPopup_PreviewMouseWheel(System.Object,System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            ポップアップ上でマウスホイール回転時のハンドラ
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.DateItem">
            <summary>
            日付アイテム
            カレンダーのリストに表示するためのアイテム
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.DateItem.TargetDateTime">
            <summary>
            年月日
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.DateItem.Day">
            <summary>
            日付（カレンダー表示用の日付）
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.DateItem.IsToday">
            <summary>
            当日の日付か
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.DateItem.#ctor(System.DateTime)">
            <summary>
            コンストラクタ
            </summary>
            <param name="dateTime"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Controls.DateTimePicker.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Framework.Controls.ToolBarButton">
            <summary>
            ToolBarに追加するボタン
            </summary>
            <summary>
            ToolBarButton
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.Controls.ToolBarButton.m_DisplayStyle">
            <summary>
            表示スタイル
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.Controls.ToolBarButton.Text">
            <summary>
            テキスト
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.Controls.ToolBarButton.Image">
            <summary>
            イメージ
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.Controls.ToolBarButton.DisplayStyle">
            <summary>
            表示スタイル
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Controls.ToolBarButton.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Controls.ToolBarButton.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Framework.Controls.ToolBarToggleButton">
            <summary>
            ToolBarに追加するトグルボタン
            </summary>
            <summary>
            ToolBarToggleButton
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.Controls.ToolBarToggleButton.m_DisplayStyle">
            <summary>
            表示スタイル
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.Controls.ToolBarToggleButton.Text">
            <summary>
            テキスト
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.Controls.ToolBarToggleButton.Image">
            <summary>
            イメージ
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.Controls.ToolBarToggleButton.DisplayStyle">
            <summary>
            表示スタイル
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Controls.ToolBarToggleButton.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Controls.ToolBarToggleButton.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Framework.Converter.NullToVisibleConverter">
            <summary>
            オブジェクトがnullか否かと、Visibilityを変換する
            オブジェクトがnullの場合、Visible。nullではない場合、Collapsed。
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Converter.NullToVisibleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            オブジェクトがnullか否かと、Visibilityを変換する
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Converter.NullToVisibleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            OneWayのため実装しない
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Framework.Converter.VisibleConverter">
            <summary>
            bool値とVisibilityの変換を行うコンバータ
            trueとVisible、falseとCollapsedの相互変換を行う
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Converter.VisibleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            bool値をVisibilityに変換する
            true:Vislble, false:Collapsed
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Converter.VisibleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            VisibilityをBool値に変換する
            Visible:true, Collapsed:false
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Framework.Converter.BitmapToImageConverter">
            <summary>
            System.Drawing.BitmapのデータからSystem.Windows.Controls.Imageへの変換を実現するコンバーター
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Converter.BitmapToImageConverter.Convert(System.Drawing.Bitmap)">
            <summary>
            変換する
            </summary>
            <param name="sourceBitmap">変換するビットマップ</param>
            <returns>変換後の値</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Converter.BitmapToImageConverter.DeleteObject(System.IntPtr)">
            <summary>
            オブジェクトに関連付けられていたすべてのシステムリソースを解放する。
            </summary>
            <param name="hObject">対象オブジェクト</param>
            <returns>リソース解法に成功したかどうか</returns>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Framework.MenuType">
            <summary>
            メニューの種類
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.MenuType.Menu">
            <summary>
            通常のメニュー
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.MenuType.CheckableMenu">
            <summary>
            チェック状態の切り替えが可能なメニュー
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Framework.ToolBarItemDisplayStyle">
            <summary>
            ツールバーに追加するアイテムの表示スタイル
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.ToolBarItemDisplayStyle.Text">
            <summary>
            テキストのみ
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.ToolBarItemDisplayStyle.Image">
            <summary>
            イメージのみ
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.ToolBarItemDisplayStyle.ImageAndText">
            <summary>
            イメージとテキスト
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Framework.ToolBarItemSeparatorInsertPos">
            <summary>
            ツールバーに追加するアイテムのセパレータの挿入位置
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.ToolBarItemSeparatorInsertPos.None">
            <summary>
            セパレータなし
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.ToolBarItemSeparatorInsertPos.Before">
            <summary>
            ツールバーに追加するアイテムの直前
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.ToolBarItemSeparatorInsertPos.After">
            <summary>
            ツールバーに追加するアイテムの直後
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Framework.ToolBarItemType">
            <summary>
            ツールバーに追加するアイテムの種類
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.ToolBarItemType.Button">
            <summary>
            通常のボタン
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.ToolBarItemType.ToggleButton">
            <summary>
            トグルボタン
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Framework.Diagnostics.ExtensionHostExtension">
            <summary>
            エクステンションで公開されているインターフェースの拡張メソッド
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Diagnostics.ExtensionHostExtension.TraceLog(LightningReview.ExtensionFramework.IApp,System.String,System.Boolean)">
            <summary>
            開発支援用のログメッセージを出力します。
            </summary>
            <param name="app">アプリケーション</param>
            <param name="message">出力するメッセージ文字列</param>
            <param name="forceWriteToFile">ログをファイルへ強制出力するか。
            trueの場合、次のパス({ユーザーごとのAppDataフォルダパス}\Roaming\DENSO CREATE INC\Lightning Review\Logs\{yyyyMMdd}.log)へトレースログを出力し、そうでなければ出力しない</param>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Framework.Diagnostics.ExtensionProfiler">
            <summary>
            処理時間を計測する。
            using (ExtensionProfiler.StartProfile()) で囲んだ部分を計測する。
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.Diagnostics.ExtensionProfiler.m_StartTime">
            <summary>
            実行時間計測の開始時間。
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.Diagnostics.ExtensionProfiler.m_Key">
            <summary>
            出力時に表示する文字列
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Diagnostics.ExtensionProfiler.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Diagnostics.ExtensionProfiler.Dispose">
            <summary>
            消滅
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.Diagnostics.ExtensionProfiler.IsEnabled">
            <summary>
            このクラスの機能が有効であるか。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.Diagnostics.ExtensionProfiler.App">
            <summary>
            ポストするLRのアプリケーション本体
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Diagnostics.ExtensionProfiler.StartProfile(System.String,System.String)">
            <summary>
            計測開始する(引数を指定しないことで、呼び出し元の[クラス名].[メンバー名]を出力時の文字列とする)
            </summary>
            <param name="filePath"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Diagnostics.ExtensionProfiler.StartProfileWithKey(System.String)">
            <summary>
            計測開始する
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Diagnostics.ExtensionProfiler.Start">
            <summary>
            実行時間の計測を開始する。
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Diagnostics.ExtensionProfiler.Stop(System.String)">
            <summary>
            実行時間の計測を終了し、結果をログに出力する。
            </summary>
            <param name="key">計測した時間差を識別するためのキー値</param>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Framework.ToolBar">
            <summary>
            ツールバー情報
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.ToolBar.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.ToolBar.Items">
            <summary>
            子要素として持つアイテム
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.ToolBar.AddToolBarItem(LightningReview.ExtensionFramework.Framework.ToolBarItem)">
            <summary>
            ツールバーにアイテムを追加
            </summary>
            <param name="toolBarItem">追加アイテム</param>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Framework.ToolBarItemBuilder">
            <summary>
            ツールバーに追加するアイテムのビルダークラス
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.ToolBarItemBuilder.ToolBarItem">
            <summary>
            ツールバーに追加するアイテム
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.ToolBarItemBuilder.App">
            <summary>
            アプリケーション
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.ToolBarItemBuilder.Extension">
            <summary>
            エクステンション
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.ToolBarItemBuilder.ToolBarItemManager">
            <summary>
            ツールバーに追加するアイテムのマネージャー
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.ToolBarItemBuilder.#ctor(LightningReview.ExtensionFramework.Framework.Host.ToolBarItemManager,LightningReview.ExtensionFramework.IHostApp,LightningReview.ExtensionFramework.IExtensionBase)">
            <summary>
            コンストラクタ
            </summary>
            <param name="manager">ツールバーに追加するアイテムを管理するマネージャー</param>
            <param name="app">アプリケーション</param>
            <param name="extension">エクステンション</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.ToolBarItemBuilder.Location(System.String)">
            <summary>
            アイテムを追加するツールバーの場所を設定する
            
            "ReviewWindow/ToolBar"
            
            </summary>
            <param name="location">アイテムを追加するツールバーの場所</param>
            <returns>ツールバーに追加するアイテムのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.ToolBarItemBuilder.Command``1">
            <summary>
            実行するコマンドを設定
            </summary>
            <typeparam name="T">コマンドの型</typeparam>
            <returns>ツールバーに追加するアイテムのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.ToolBarItemBuilder.Top">
            <summary>
            アイテムの追加先を先頭に設定する
            </summary>
            <returns>ツールバーに追加するアイテムのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.ToolBarItemBuilder.Bottom">
            <summary>
            アイテムの追加先を末尾に設定する
            </summary>
            <returns>ツールバーに追加するアイテムのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.ToolBarItemBuilder.After(System.String)">
            <summary>
            アイテムの追加先を兄弟として指定したアイテムの後に設定する
            </summary>
            <param name="siblingItem">兄弟アイテムのツールチップ</param>
            <returns>ツールバーに追加するアイテムのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.ToolBarItemBuilder.Before(System.String)">
            <summary>
            アイテムの追加先を兄弟として指定したアイテムの前に設定する
            </summary>
            <param name="siblingItem">兄弟アイテムのツールチップ</param>
            <returns>ツールバーに追加するアイテムのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.ToolBarItemBuilder.WithSeparatorBefore">
            <summary>
            セパレーターをアイテムの直前に挿入する
            </summary>
            <returns>ツールバーに追加するアイテムのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.ToolBarItemBuilder.WithSeparatorAfter">
            <summary>
            セパレーターをアイテムの直後に挿入する
            </summary>
            <returns>ツールバーに追加するアイテムのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.ToolBarItemBuilder.SetButton">
            <summary>
            ボタンとして振舞うように設定する
            </summary>
            <returns>ツールバーに追加するアイテムのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.ToolBarItemBuilder.SetToggleButton(System.Boolean)">
            <summary>
            トグルボタンとして振る舞うように設定する
            ExtensionCommandクラスのOnExecuteメソッドの引数でボタンをクリックした後のトグルボタンのチェック状態(ToggleButton.IsChecked)を渡します。
            OnExecuteメソッドの引数をbool型にキャストして、トグルボタンのチェック状態を取得してください。
            OnExecuteメソッドの引数がtrueであれば、トグルボタンを押したことによってトグルボタンがチェック状態になったことを意味します。
            OnExecuteメソッドの引数がfalseであれば、トグルボタンを押したことによってトグルボタンがチェック状態でなくなったことを意味します。
            </summary>
            <param name="isChecked">チェック状態(デフォルト値)</param>
            <returns>ツールバーに追加するアイテムのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.ToolBarItemBuilder.SetTextStyle">
            <summary>
            テキストで表現するアイテムとなるように設定する
            </summary>
            <returns>ツールバーに追加するアイテムのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.ToolBarItemBuilder.SetImageStyle">
            <summary>
            イメージで表現するアイテムとなるように設定する
            </summary>
            <returns>ツールバーに追加するアイテムのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.ToolBarItemBuilder.SetImageAndTextStyle">
            <summary>
            テキストとイメージで表現するアイテムとなるように設定する
            </summary>
            <returns>ツールバーに追加するアイテムのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.ToolBarItemBuilder.Build">
            <summary>
            本クラスで作成したアイテムをUIとして構築するための準備を完了させる。
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Framework.MVVM.DialogViewModelBase">
            <summary>
            ダイアログ用のビューモデルのベースクラス
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.MVVM.DialogViewModelBase.AcceptCommand">
            <summary>
            OKボタン押下時のコマンド
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.MVVM.DialogViewModelBase.CancelCommand">
            <summary>
            キャンセルボタン押下時のコマンド
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.MVVM.DialogViewModelBase.Accept">
            <summary>
            OKボタン押下時の処理
            既定ではWindow.DialogResultにTrueが設定されます
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.MVVM.DialogViewModelBase.CanAccept">
            <summary>
            OK可能か
            </summary>
            <returns></returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.MVVM.DialogViewModelBase.Cancel">
            <summary>
            キャンセルボタン押下時の処理
            既定ではWindow.DialogResultにFalseが設定されます
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.MVVM.DialogViewModelBase.CanCancel">
            <summary>
            キャンセル可能か
            </summary>
            <returns></returns>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Framework.ToolBarItem">
            <summary>
            ツールバーに追加するアイテム
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.ToolBarItem.App">
            <summary>
            アプリケーション
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.ToolBarItem.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.ToolBarItem.Location">
            <summary>
            ロケーション
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.ToolBarItem.SiblingItem">
            <summary>
            兄弟アイテム名
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.ToolBarItem.InsertPos">
            <summary>
            アイテムの挿入位置
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.ToolBarItem.Title">
            <summary>
            タイトル
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.ToolBarItem.SeparatorInsertPos">
            <summary>
            セパレータの挿入位置
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.ToolBarItem.Command">
            <summary>
            実行するコマンド
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.ToolBarItem.ToolBarItemType">
            <summary>
            種類
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.ToolBarItem.ToolBarItemDisplayStyle">
            <summary>
            表示スタイル
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.ToolBarItem.IsChecked">
            <summary>
            チェック状態
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.ToolBarItem.#ctor(LightningReview.ExtensionFramework.IHostApp)">
            <summary>
            コンストラクタ
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.ToolBarItem.ExecuteCommand">
            <summary>
            コマンドを実行する
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.ToolBarItem.GetIconImage">
            <summary>
            アイコンのイメージを取得する
            </summary>
            <returns>アイコンのイメージ</returns>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Framework.Host.ToolBarItemManager">
            <summary>
            ツールバーに追加するアイテムを登録したり、UIにバインドするクラス
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.Host.ToolBarItemManager.App">
            <summary>
            アプリケーション
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.Host.ToolBarItemManager.ToolBars">
            <summary>
            ツールバーの一覧
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Framework.Host.ToolBarItemManager.Locations">
            <summary>
            有効なロケーション一覧
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Host.ToolBarItemManager.#ctor(LightningReview.ExtensionFramework.IHostApp)">
            <summary>
            コンストラクタ
            </summary>
            <param name="app">アプリケーション</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Host.ToolBarItemManager.RegisterLocation(System.String)">
            <summary>
            有効なロケーションを登録する
            </summary>
            <param name="location">ロケーション</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Host.ToolBarItemManager.IsValidLocation(System.String)">
            <summary>
            有効なロケーションか返す
            </summary>
            <param name="location">ロケーション</param>
            <returns>ロケーションが有効か</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Host.ToolBarItemManager.BindUI(System.String,System.Windows.UIElement,System.Windows.Controls.ToolBar)">
            <summary>
            ツールバーに追加するアイテムをUIにバインドする
            </summary>
            <param name="location">ロケーション</param>
            <param name="element">ツールバーの所有者</param>
            <param name="toolBar">ツールバー</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Host.ToolBarItemManager.RegisterToolBarItem(LightningReview.ExtensionFramework.Framework.Host.ToolBarItemManager,LightningReview.ExtensionFramework.IHostApp,LightningReview.ExtensionFramework.IExtensionBase)">
            <summary>
            ツールバーに追加するアイテムのビルダーを作成する。
            </summary>
            <param name="toolBarItemManager">ツールバーに追加するアイテムを管理するマネージャー</param>
            <param name="app">アプリケーション</param>
            <param name="extension">エクステンション</param>
            <returns>ツールバーに追加するアイテムのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Host.ToolBarItemManager.GetToolBar(System.String)">
            <summary>
            locationのツールバーを取得する
            </summary>
            <param name="location">対象位置</param>
            <returns>ツールバー情報</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Host.ToolBarItemManager.BindUI(System.String,System.Windows.UIElement,System.Windows.Controls.ItemCollection)">
            <summary>
            WPFメニューにデータをバインドして作成する
            </summary>
            <param name="location">ロケーション</param>
            <param name="element">ツールバーの所有者</param>
            <param name="toolBarItems">ツールバーの子要素</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Host.ToolBarItemManager.CreateToolBarItemUI(System.Windows.Controls.ItemCollection,LightningReview.ExtensionFramework.Framework.ToolBarItem)">
             <summary>
            ツールバーの子要素に、ツールバーに追加するアイテムのUIを追加する
             </summary>
             <param name="toolBarItemsUI">ツールバーの子要素コレクション</param>
             <param name="toolBarItem">ツールバーに追加するアイテム</param>
             <returns>作成したUIアイテム</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Host.ToolBarItemManager.CreateToolBarButtonUI(LightningReview.ExtensionFramework.Framework.ToolBarItem)">
            <summary>
            ツールバーに追加するボタンのUIを作成する
            </summary>
            <param name="toolBarItem">ツールバーに追加するアイテム</param>
            <returns>作成したボタンUI</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Host.ToolBarItemManager.CreateToolBarToggleButtonUI(LightningReview.ExtensionFramework.Framework.ToolBarItem)">
            <summary>
            ツールバーに追加するトグルボタンのUIを作成する
            </summary>
            <param name="toolBarItem">ツールバーに追加するアイテム</param>
            <returns>作成したトグルボタンUI</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Host.ToolBarItemManager.InsertSeparatorUI(System.Windows.Controls.ItemCollection,LightningReview.ExtensionFramework.Framework.ToolBarItem,System.Windows.Controls.Control)">
            <summary>
            ツールバーに追加するアイテムに対してセパレータを挿入する
            </summary>
            <param name="toolBarItemsUI">ツールバーの子要素コレクション</param>
            <param name="toolBarItem">ツールバーに追加するアイテム</param>
            <param name="toolBarItemUI">ツールバーに追加するアイテムUI</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Host.ToolBarItemManager.GetToolBarItemUI(System.Windows.Controls.ItemCollection,System.String)">
            <summary>
            ツールバーのアイテムのツールチップを指定してUIを取得する
            </summary>
            <param name="toolBarItems">ツールバーの子要素コレクション</param>
            <param name="toolBarItemToolTip">ツールバーのアイテムのツールチップ</param>
            <returns></returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Framework.Host.ToolBarItemManager.ToolBarItemNameContains(System.Windows.Controls.Control,System.String)">
            <summary>
            ツールバーのアイテムのツールチップがアイテムUIのツールチップに含まれるか
            </summary>
            <param name="itemUI">アイテムUI</param>
            <param name="toolBarItemToolTip">ツールバーのアイテムのツールチップ</param>
            <returns>ツールバーのアイテムのツールチップがUIのツールチップに含まれるか</returns>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Framework.ToolBarItemInsertPos">
            <summary>
            ツールバーに追加するアイテムの挿入先
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.ToolBarItemInsertPos.Before">
            <summary>
            兄弟として指定したアイテムの前
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.ToolBarItemInsertPos.After">
            <summary>
            兄弟として指定したアイテムの後
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.ToolBarItemInsertPos.Top">
            <summary>
            先頭
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Framework.ToolBarItemInsertPos.Bottom">
            <summary>
            末尾
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.UserException">
            <summary>
            ユーザーに対してエラーの解決方法を知らせるための例外
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.UserException.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.UserException.#ctor(System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="message">メッセージ</param>
        </member>
        <member name="T:LightningReview.ExtensionFramework.BindableBase">
            <summary>
            バインドするデータの基底クラス
            </summary>
        </member>
        <member name="E:LightningReview.ExtensionFramework.BindableBase.PropertyChanged">
            <summary>
            プロパティ変更イベント
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.BindableBase.OnPropertyChanged(System.String)">
            <summary>
            プロパティ変更イベントを発行する
            </summary>
            <param name="propertyName">プロパティ名</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.BindableBase.SetProperty``1(``0@,``0,System.String)">
            <summary>
            プロパティを設定する
            </summary>
            <typeparam name="T">プロパティの型</typeparam>
            <param name="storage">プロパティのデータを保持するフィールド</param>
            <param name="value">設定するプロパティ値</param>
            <param name="propertyName">プロパティ名</param>
            <returns>設定した:true,変更不要なため設定しない:false</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.BindableBase.NotifyChanged">
            <summary>
            変更を通知する
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.ExceptionHelper">
            <summary>
            Exceptionクラスの拡張メソッドを提供する
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Host.AppBase">
            <summary>
            ホストするLRのAppのベースクラス
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.AppBase.GetDocumentParser(System.String)">
            <summary>
            ドキュメントに対応するパーサを取得する
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.AppBase.GetDocumentParser(LightningReview.ExtensionFramework.IDocument)">
            <summary>
            ドキュメントに対応するパーサを取得する
            </summary>
            <param name="document"></param>
            <returns></returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.AppBase.RegisterDocumentParser``1">
            <summary>
            パーサーを登録する
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.AppBase.RemoveDocumentParser``1">
            <summary>
            パーサーを削除する
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.AppBase.RaiseStartup(System.Object,System.EventArgs)">
            <summary>
            アプリケーションの起動完了時のイベントを発行する
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.AppBase.RaiseBeforeQuit(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            アプリケーションの終了前イベントを発行する
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.AppBase.RaiseReviewNew(System.Object,LightningReview.ExtensionFramework.ReviewEventArgs)">
            <summary>
            レビューを新規作成のイベントを発行する
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.AppBase.RaiseReviewOpen(System.Object,LightningReview.ExtensionFramework.ReviewEventArgs)">
            <summary>
            レビューファイルを開く時のイベントを発行する
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.AppBase.RaiseReviewBeforeSave(System.Object,LightningReview.ExtensionFramework.ReviewBeforeSaveEventArgs)">
            <summary>
            レビューの保存前イベントを発行する
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.AppBase.RaiseReviewAfterSave(System.Object,LightningReview.ExtensionFramework.ReviewEventArgs)">
            <summary>
            レビューの保存後イベントを発行する
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.AppBase.RaiseReviewBeforeClose(System.Object,LightningReview.ExtensionFramework.ReviewCancelEventArgs)">
            <summary>
            レビューが閉じる前のイベントを発行する
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.AppBase.RaiseReviewAfterClose(System.Object,LightningReview.ExtensionFramework.ReviewAfterCloseEventArgs)">
            <summary>
            レビューが閉じた後のイベントを発行する
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.AppBase.RaiseIssueSelectionChanged(System.Object,LightningReview.ExtensionFramework.IssueEventArgs)">
            <summary>
            指摘の選択が変更された時のイベントを発行する
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.AppBase.RaiseIssueNew(System.Object,LightningReview.ExtensionFramework.IssueEventArgs)">
            <summary>
            指摘が新規作成された時のイベントを発行する
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.AppBase.RaiseIssueEdit(System.Object,LightningReview.ExtensionFramework.IssueEventArgs)">
            <summary>
            指摘の属性が編集された時のイベントを発行する
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.AppBase.RaiseIssueBeforeDelete(System.Object,LightningReview.ExtensionFramework.IssueCancelEventArgs)">
            <summary>
            指摘が削除される前のイベントを発行する
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.AppBase.RaiseDocumentBeforeJump(System.Object,LightningReview.ExtensionFramework.DocumentBeforeJumpEventArgs)">
            <summary>
            ドキュメントにジャンプする前のイベントを発行する
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.AppBase.RaiseDocumentBeforeParse(System.Object,LightningReview.ExtensionFramework.DocumentBeforeParseEventArgs)">
            <summary>
            ドキュメントのアウトライン解析をする前のイベントを発行する
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.AppBase.RaiseOutlineNodeBeforeJump(System.Object,LightningReview.ExtensionFramework.OutlineNodeBeforeJumpEventArgs)">
            <summary>
            アウトラインにジャンプする前のイベントを発行する
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.AppBase.RaiseIssueLocationBeforeJump(System.Object,LightningReview.ExtensionFramework.IssueLocationBeforeJumpEventArgs)">
            <summary>
            指摘箇所にジャンプする前のイベントを発行する
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Host.DocumentParserManager">
            <summary>
            ドキュメントパーサーの管理クラス
            パーサーの登録・取得・削除を行う
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Host.DocumentParserManager.App">
            <summary>
            アプリケーション
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Host.DocumentParserManager.Parsers">
            <summary>
            登録されたパーサー
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.DocumentParserManager.#ctor(LightningReview.ExtensionFramework.IApp)">
            <summary>
            コンストラクタ
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.DocumentParserManager.GetParser(System.String)">
            <summary>
            ファイルのパスに対応したパーサを取得する。
            なければnullが戻る
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.DocumentParserManager.GetParser(LightningReview.ExtensionFramework.IDocument)">
            <summary>
            パーサを取得する
            </summary>
            <param name="document"></param>
            <returns></returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.DocumentParserManager.RegisterParser(LightningReview.ExtensionFramework.IDocumentParser)">
            <summary>
            パーサを登録する
            </summary>
            <param name="parser"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.DocumentParserManager.RegisterParser``1">
            <summary>
            パーサを登録する
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.DocumentParserManager.RemoveParser(LightningReview.ExtensionFramework.IDocumentParser)">
            <summary>
            パーサを登録解除する
            </summary>
            <param name="parser"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.DocumentParserManager.RemoveParser``1">
            <summary>
            パーサを登録解除する
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Host.ExtensionAppBase">
            <summary>
            IAppBase実装のベースクラス
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.ExtensionAppBase.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Host.ExtensionAppBase.ExtensionFolders">
            <summary>
            エクステンションをロードするフォルダ
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.ExtensionAppBase.RegisterMenu(LightningReview.ExtensionFramework.IExtensionBase)">
            <summary>
            メニューのビルダーを戻します。
            </summary>
            <param name="Extension">エクステンション</param>
            <returns>メニューのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.ExtensionAppBase.RegisterToolBarItem(LightningReview.ExtensionFramework.IExtensionBase)">
            <summary>
            ツールバーに追加するアイテムのビルダーを戻します。
            </summary>
            <param name="Extension">エクステンション</param>
            <returns>ツールバーに追加するアイテムのビルダー</returns>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Host.ExtensionAppBase.MenuManager">
            <summary>
            メニューマネージャー
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Host.ExtensionAppBase.ToolBarItemManager">
            <summary>
            ツールバーに追加するアイテムを管理するマネージャー
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.ExtensionAppBase.BindUI(System.String,System.Windows.UIElement,System.Windows.Controls.Menu)">
            <summary>
            メニューをUIにバインドする
            </summary>
            <param name="location">メニューのロケーション</param>
            <param name="element">メニューの所有者</param>
            <param name="menuUI">追加先のメニュー</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.ExtensionAppBase.BindUI(System.String,System.Windows.UIElement,System.Windows.Controls.ContextMenu)">
            <summary>
            メニューをUIにバインドする
            </summary>
            <param name="location">メニューのロケーション</param>
            <param name="element">メニューの所有者</param>
            <param name="menuUI">追加先のコンテキストメニュー</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.ExtensionAppBase.BindUI(System.String,System.Windows.UIElement,System.Windows.Controls.ToolBar)">
            <summary>
            ツールバーに追加するアイテムをUIにバインドする
            </summary>
            <param name="location">ツールバーのロケーション</param>
            <param name="element">ツールバーの所有者</param>
            <param name="toolBar">追加先のツールバー</param>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Host.MenuManager">
            <summary>
            メニュー情報(Menuクラス)を登録したりUIにバインドするクラス
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Host.MenuManager.App">
            <summary>
            アプリケーション
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Host.MenuManager.Menus">
            <summary>
            エクステンション側から追加するメニューにとって、追加先となるメニュー(アプリケーションに元々存在するメニュー)情報の一覧
            keyはロケーションで、Valueは、メニュー情報である。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Host.MenuManager.Locations">
            <summary>
            有効なロケーション一覧
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.MenuManager.#ctor(LightningReview.ExtensionFramework.IHostApp)">
            <summary>
            コンストラクタ
            </summary>
            <param name="app">アプリケーション</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.MenuManager.RegisterLocation(System.String)">
            <summary>
            有効なロケーションを登録する
            </summary>
            <param name="location">ロケーション</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.MenuManager.IsValidLocation(System.String)">
            <summary>
            有効なロケーションか返す
            </summary>
            <param name="location">ロケーション</param>
            <returns>ロケーションが有効か</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.MenuManager.BindUI(System.String,System.Windows.UIElement,System.Windows.Controls.Menu)">
            <summary>
            メニューをUIにバインドする
            </summary>
            <param name="location">ロケーション</param>
            <param name="element">メニューの所有者</param>
            <param name="menuUI">メニュー</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.MenuManager.BindUI(System.String,System.Windows.UIElement,System.Windows.Controls.ContextMenu)">
            <summary>
            メニューをUIにバインドする
            </summary>
            <param name="location">ロケーション</param>
            <param name="element">メニューの所有者</param>
            <param name="menuUI">コンテキストメニュー</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.MenuManager.RegisterMenu(LightningReview.ExtensionFramework.Host.MenuManager,LightningReview.ExtensionFramework.IHostApp,LightningReview.ExtensionFramework.IExtensionBase)">
            <summary>
            メニューのビルダーを作成する
            </summary>
            <param name="menuManager">メニューマネージャー</param>
            <param name="app">アプリケーション</param>
            <param name="extension">エクステンション</param>
            <returns>メニューのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.MenuManager.GetMenu(System.String)">
            <summary>
            locationのメニューを取得する
            </summary>
            <param name="location">対象位置</param>
            <returns>メニュー情報</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.MenuManager.BindUI(System.String,System.Windows.UIElement,System.Windows.Controls.ItemCollection)">
            <summary>
            WPFメニューにデータをバインドして作成する
            </summary>
            <param name="location">ロケーション</param>
            <param name="element">メニューの所有者</param>
            <param name="menuItems">メニューの子要素</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.MenuManager.CreateMenuUI(System.Windows.Controls.ItemCollection,LightningReview.ExtensionFramework.Menu)">
            <summary>
            指定コレクションにメニューUIを作成する
            </summary>
            <param name="menuItemsUI">メニューの子要素コレクション</param>
            <param name="menu">メニュー</param>
            <returns>メニューUI</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.MenuManager.InsertSepatorUI(System.Windows.Controls.ItemCollection,LightningReview.ExtensionFramework.Menu,System.Windows.Controls.MenuItem)">
            <summary>
            メニューに対してセパレータを挿入する
            </summary>
            <param name="menuItemsUI">メニューアイテムのコレクション</param>
            <param name="menu">エクステンションで保持しているメニュー情報</param>
            <param name="menuItemUI">メニューアイテム(UI)</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.MenuManager.GetMenuItem(System.Windows.Controls.ItemCollection,System.String)">
            <summary>
            メニュー名を指定してメニューUIを取得する
            </summary>
            <param name="menuItems">メニュー一覧</param>
            <param name="menuName">メニュー名</param>
            <returns>メニューUI</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.MenuManager.GetMenuItem(System.Windows.Controls.MenuItem,System.String)">
            <summary>
            メニュー名を指定してメニューUIを取得する
            </summary>
            <param name="menu">メニューUI</param>
            <param name="menuName">メニュー名</param>
            <returns>メニューUI</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.MenuManager.MenuNameContains(System.Windows.Controls.MenuItem,System.String)">
            <summary>
            メニュー名がメニューUIのヘッダーに含まれるかを返す
            </summary>
            <param name="item">メニューUI</param>
            <param name="menuName">メニュー名</param>
            <returns>メニュー名がメニューUIのヘッダーに含まれるか</returns>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Host.ExtensionManager.m_Extensions">
            <summary>
            読み込み対象のエクステンション
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.Host.ExtensionManager.m_NotLoadedExtensionDictionary">
            <summary>
            読み込み対象としないエクステンション名と実行ファイル名、アセンブリバージョンからなるディクショナリ
            </summary>
            <remarks>
            エクステンションのAPIの変更により、最新版プログラムで動作しなくなったバージョンをディクショナリに追加する。
            
            最新版プログラムで動作しなくなった理由は以下。
            - V1.7向けに作成されたエクステンションはV1.8と互換性がなく、実行時にシステム例外となってしまうため
            - V1.8.0からV1.8.1のバージョンアップでBeginEdit(bool)の引数が変わったため
            </remarks>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Host.ExtensionManager.LoadedExtensions">
            <summary>
            アクティベート済みのエクステンション
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.ExtensionManager.#ctor(LightningReview.ExtensionFramework.IHostApp)">
            <summary>
            コンストラクタ
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.ExtensionManager.LoadExtensions">
            <summary>
            エクステンションを全て読みこんで、[Import]がついているプロパティに格納する。
            </summary>
            <returns>
            アプリケーションの実行中に発生するエラー。
            nullの場合はエラーが発生していないことを表す。
            </returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.ExtensionManager.UnloadExtensions">
            <summary>
            アクティベート済みのエクステンションをディアクティベートする
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.ExtensionManager.IsNotLoadedExtension(LightningReview.ExtensionFramework.IExtensionBase)">
            <summary>
            読み込み対象としないエクステンションであるか
            </summary>
            <param name="extension">エクステンション</param>
            <returns>
             true：読み込み対象でない
            false：読み込み対象
            </returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Host.ExtensionManager.GetPackageName(System.String)">
            <summary>
            パッケージ名を取得する
            </summary>
            <param name="id">エクステンションのID</param>
            <returns>パッケージ名</returns>
        </member>
        <member name="T:LightningReview.ExtensionFramework.MenuInsertPos">
            <summary>
            メニューの挿入位置
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.MenuInsertPos.Before">
            <summary>
            兄弟として指定したメニューの前
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.MenuInsertPos.After">
            <summary>
            兄弟として指定したメニューの後
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.MenuInsertPos.Top">
            <summary>
            先頭
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.MenuInsertPos.Bottom">
            <summary>
            末尾
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.MenuSeparatorInsertPos">
            <summary>
            メニューセパレータの挿入位置
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.MenuSeparatorInsertPos.None">
            <summary>
            セパレータなし
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.MenuSeparatorInsertPos.Before">
            <summary>
            メニュー上部
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.MenuSeparatorInsertPos.After">
            <summary>
            メニュー下部
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.ViewModelBase">
            <summary>
            ビューモデルの基底クラス
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.ExtensionFrameworkServiceLocator">
            <summary>
            DI管理。対象となるインターフェースに対するインスタンスを管理する
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.ExtensionFrameworkServiceLocator.m_DefaultTypeDictionary">
            <summary>
            インターフェースと対応する規定のインスタンス
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.ExtensionFrameworkServiceLocator.m_TypeDictionary">
            <summary>
            インターフェイスと対応するインスタンス
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionFrameworkServiceLocator.#cctor">
            <summary>
            クラスコンストラクタ
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionFrameworkServiceLocator.RegisterDefaults">
            <summary>
            Implのベースを登録
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionFrameworkServiceLocator.Register``1(System.Object)">
            <summary>
            インターフェースと対応するインスタンスを登録
            </summary>
            <typeparam name="TKey">対象となるインターフェース</typeparam>
            <param name="value">インスタンス</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionFrameworkServiceLocator.RegisterDefault``1(System.Object)">
            <summary>
            規定のインターフェースと対応するインスタンスを登録する
            登録がなければ規定のクラスを利用するようになっていて、それをテスト時などに切り替えることができる
            </summary>
            <typeparam name="TKey">対象となるインターフェース</typeparam>
            <param name="value">インスタンス</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionFrameworkServiceLocator.ResolveDefault``1">
            <summary>
            デフォルトで登録されているインターフェースのインスタンスを取得する
            </summary>
            <typeparam name="TKey"></typeparam>
            <returns></returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionFrameworkServiceLocator.Resolve``1">
            <summary>
            対象となるインターフェースのインスタンスを取得する
            </summary>
            <typeparam name="TKey">インターフェース</typeparam>
            <returns>インスタンス</returns>
        </member>
        <member name="T:LightningReview.ExtensionFramework.IExtensionUIService">
            <summary>
            確認ダイアログやエラーダイアログなどのUIを表示する機能を提供するインターフェイス
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IExtensionUIService.ShowMessageBox(System.String)">
            <summary>
            メッセージボックスの表示
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IExtensionUIService.ShowExcecption(LightningReview.ExtensionFramework.IExtensionBase,System.Exception,System.String)">
            <summary>
            例外のエラーの表示
            UserExceptionの場合はユーザー向け表示、そうでない場合はシステムエラーとして表示する。
            従って、ファイル系の例外などはユーザ例外としてキャッチしなおすことが必要。
            </summary>
            <param name="extension"></param>
            <param name="e"></param>
            <param name="message"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IExtensionUIService.ShowExcecption(System.Exception,System.String)">
            <summary>
            例外のエラーの表示
            UserExceptionの場合はユーザー向け表示、そうでない場合はシステムエラーとして表示する。
            従って、ファイル系の例外などはユーザ例外としてキャッチしなおすことが必要。
            </summary>
            <param name="e"></param>
            <param name="message"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IExtensionUIService.ShowConfirmDialog(System.String)">
            <summary>
            OK/Cancelの確認ダイアログの表示
            </summary>
            <param name="message"></param>
            <returns>OKの場合はtrue</returns>
        </member>
        <member name="T:LightningReview.ExtensionFramework.ExtensionUIServiceImpl">
            <summary>
            確認ダイアログやエラーダイアログなどのUIを表示するデフォルト機能を提供する
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.DocumentBeforeJumpEventArgs">
            <summary>
            ドキュメントへのジャンプの前イベントのイベントパラメータです。
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.DocumentBeforeJumpEventArgs.#ctor(LightningReview.ExtensionFramework.IReviewWindow,LightningReview.ExtensionFramework.IDocument,System.String,System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="reviewWindow">レビューウィンドウ</param>
            <param name="document">ドキュメント</param>
            <param name="targetJumpPath">ジャンプ対象のパス</param>
            <param name="documentLinkName">ジャンプ対象のドキュメントリンクの名前</param>
        </member>
        <member name="P:LightningReview.ExtensionFramework.DocumentBeforeJumpEventArgs.ReviewWindow">
            <summary>
            レビューウィンドウを取得します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.DocumentBeforeJumpEventArgs.Document">
            <summary>
            ジャンプ対象のドキュメントを取得します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.DocumentBeforeJumpEventArgs.TargetJumpPath">
            <summary>
            ジャンプ対象となるパスを取得または設定します。
            </summary>
            <remarks>イベントハンドラで、このプロパティを変更するとジャンプする対象のパスを変更できます。</remarks>
        </member>
        <member name="P:LightningReview.ExtensionFramework.DocumentBeforeJumpEventArgs.DocumentLinkName">
            <summary>
            ジャンプ対象のドキュメントリンクの名前を取得します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.DocumentBeforeJumpEventArgs.Handled">
            <summary>
            イベントが処理されたかどうかを取得または設定します。
            </summary>
            <remarks>
            デフォルトではfalseが設定され、イベントハンドラの処理が終了した後、TargetJumpPathを使って本体側のジャンプが実行されます。
            trueを設定すると、イベントハンドラの処理が終了した後、何も実行されません。
            </remarks>
        </member>
        <member name="T:LightningReview.ExtensionFramework.DocumentBeforeParseEventArgs">
            <summary>
            ドキュメントのアウトライン解析の前イベントのイベントパラメータです。
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.DocumentBeforeParseEventArgs.#ctor(LightningReview.ExtensionFramework.IReviewWindow,LightningReview.ExtensionFramework.IDocument,System.String,System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="reviewWindow">レビューウィンドウ</param>
            <param name="document">ドキュメント</param>
            <param name="targetParsingPath">アウトライン解析対象のパス</param>
            <param name="documentLinkName">アウトライン解析対象のドキュメントリンクの名前</param>
        </member>
        <member name="P:LightningReview.ExtensionFramework.DocumentBeforeParseEventArgs.ReviewWindow">
            <summary>
            レビューウィンドウを取得または設定します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.DocumentBeforeParseEventArgs.Document">
            <summary>
            アウトライン解析の対象のドキュメントを取得します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.DocumentBeforeParseEventArgs.TargetParsingPath">
            <summary>
            アウトライン解析対象のパスを取得または設定します。
            </summary>
            <remarks>イベントハンドラで、このプロパティを変更するとアウトライン解析対象のパスを変更できます。</remarks>
        </member>
        <member name="P:LightningReview.ExtensionFramework.DocumentBeforeParseEventArgs.DocumentLinkName">
            <summary>
            ジャンプ対象のドキュメントリンクの名前を取得します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.DocumentBeforeParseEventArgs.Handled">
            <summary>
            イベントが処理されたかどうかを取得します。
            </summary>
            <remarks>
            デフォルトではfalseが設定され、イベントハンドラの処理が終了した後はTargetParsingPathを使って本体側のアウトライン解析が実行されます。
            trueを設定すると、イベントハンドラの処理が終了した後、何も実行されません。
            </remarks>
        </member>
        <member name="T:LightningReview.ExtensionFramework.IssueLocationBeforeJumpEventArgs">
            <summary>
            指摘箇所へのジャンプの前イベントのイベントパラメータです。
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IssueLocationBeforeJumpEventArgs.#ctor(LightningReview.ExtensionFramework.IReviewWindow,LightningReview.ExtensionFramework.IIssue,System.String,System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="reviewWindow">レビューウィンドウ</param>
            <param name="issue">指摘</param>
            <param name="targetJumpPath">ジャンプ対象のパス</param>
            <param name="documentLinkName">ジャンプ対象のドキュメントリンクの名前</param>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IssueLocationBeforeJumpEventArgs.ReviewWindow">
            <summary>
            レビューウィンドウを取得します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IssueLocationBeforeJumpEventArgs.Issue">
            <summary>
            ジャンプ対象の指摘を取得します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IssueLocationBeforeJumpEventArgs.TargetJumpPath">
            <summary>
            ジャンプ対象となるパスを取得または設定します。
            </summary>
            <remarks>イベントハンドラで、このプロパティを変更するとジャンプする対象のパスを変更できます。</remarks>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IssueLocationBeforeJumpEventArgs.DocumentLinkName">
            <summary>
            ジャンプ対象のドキュメントリンクの名前を取得します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IssueLocationBeforeJumpEventArgs.Handled">
            <summary>
            イベントが処理されたかどうかを取得または設定します。
            </summary>
            <remarks>
            デフォルトではfalseが設定され、イベントハンドラの処理が終了した後、TargetJumpPathを使って本体側のジャンプが実行されます。
            trueを設定すると、イベントハンドラの処理が終了した後、何も実行されません。
            </remarks>
        </member>
        <member name="T:LightningReview.ExtensionFramework.OutlineNodeBeforeJumpEventArgs">
            <summary>
            アウトラインへのジャンプの前イベントのイベントパラメータです。
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.OutlineNodeBeforeJumpEventArgs.#ctor(LightningReview.ExtensionFramework.IReviewWindow,LightningReview.ExtensionFramework.IOutlineNode,System.String,System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="reviewWindow">レビューウィンドウ</param>
            <param name="outlineNode">アウトラインノード</param>
            <param name="targetJumpPath">ジャンプ対象のパス</param>
            <param name="documentLinkName">ジャンプ対象のドキュメントリンクの名前</param>
        </member>
        <member name="P:LightningReview.ExtensionFramework.OutlineNodeBeforeJumpEventArgs.ReviewWindow">
            <summary>
            レビューウィンドウを取得します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.OutlineNodeBeforeJumpEventArgs.OutlineNode">
            <summary>
            ジャンプ対象のアウトラインノードを取得します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.OutlineNodeBeforeJumpEventArgs.TargetJumpPath">
            <summary>
            ジャンプ対象となるパスを取得または設定します。
            </summary>
            <remarks>イベントハンドラで、このプロパティを変更するとジャンプする対象のパスを変更できます。</remarks>
        </member>
        <member name="P:LightningReview.ExtensionFramework.OutlineNodeBeforeJumpEventArgs.DocumentLinkName">
            <summary>
            ジャンプ対象のドキュメントリンクの名前を取得します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.OutlineNodeBeforeJumpEventArgs.Handled">
            <summary>
            イベントが処理されたかどうかを取得または設定します。
            </summary>
            <remarks>
            デフォルトではfalseが設定され、イベントハンドラの処理が終了した後、TargetJumpPathを使って本体側のジャンプが実行されます。
            trueを設定すると、イベントハンドラの処理が終了した後、何も実行されません。
            </remarks>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Extension">
            <summary>
            Lightning Reviewのエクステンション
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Extension.RegisterDocumentParser``1">
            <summary>
            パーサの登録
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Extension.RemoveDocumentParser``1">
            <summary>
            パーサの解除
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:LightningReview.ExtensionFramework.LightningReview.Host.IMetaData">
            <summary>
            エンティティのメタデータを取得・更新するインターフェイス
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.Host.IMetaData.Key">
            <summary>
            キー
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.Host.IMetaData.Encrypted">
            <summary>
            暗号化されているか
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.Host.IMetaData.SetValue(System.Object,System.Boolean)">
            <summary>
            値を設定する
            </summary>
            <param name="value">設定する値</param>
            <param name="encrypt">値を暗号化するか(値がstring型の場合のみ暗号化可能)</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.Host.IMetaData.GetValue``1(``0,System.Boolean)">
            <summary>
            型を指定して値を取得する
            </summary>
            <typeparam name="T">取得する型</typeparam>
            <param name="defaultValue">値が取得できなかった場合の値</param>
            <param name="decrypt">値を復号化するか</param>
            <returns>取得する値</returns>
        </member>
        <member name="T:LightningReview.ExtensionFramework.LightningReview.ICustomField`1">
            <summary>
            カスタムフィールドの編集を実現するインターフェース。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.ICustomField`1.Defenition">
            <summary>
            カスタムフィールドの定義を取得します。
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.ICustomField`1.GetValue">
            <summary>
            カスタムフィールドの値を取得します。
            </summary>
            <returns>カスタムフィールドの値。</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.ICustomField`1.SetValue(System.String)">
            <summary>
            カスタムフィールドの値を設定します。
            </summary>
            <param name="value">設定する値。</param>
        </member>
        <member name="T:LightningReview.ExtensionFramework.LightningReview.ICustomRole">
            <summary>
            カスタムロールの編集を実現するインターフェース。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.ICustomRole.Defenition">
            <summary>
            カスタムロールの定義を取得します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.ICustomRole.IsAssigned">
            <summary>
            カスタムロールに割り当てられているかを取得または設定します。
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.LightningReview.IDocumentLink">
            <summary>
            ドキュメントに関連づくリンクの編集を実現するインタフェースです。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.IDocumentLink.Name">
            <summary>
            ドキュメントに関連づくリンクの名前です。
            </summary>
            <value>リンク名の文字列。</value>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.IDocumentLink.Path">
            <summary>
            ドキュメントに関連づくリンクのパスです。
            </summary>
            <remarks>
            リンクのパスに相対パスが設定されている場合は、相対パスのままでは利用できないため、レビューファイルのパスと相対パスを結合したパスを返します。
            絶対パスが設定されている場合は、そのまま返します。
            </remarks>
            <value>リンクのパスの文字列。</value>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.IDocumentLink.Tag">
            <summary>
            ドキュメントに関連づくリンクのタグです。
            </summary>
            <remarks>
            タグはAPIでのみ設定可能です。
            UIでは設定することができません。
            </remarks>
            <value>リンクのタグの文字列。</value>
        </member>
        <member name="T:LightningReview.ExtensionFramework.LightningReview.ICustomFieldDefinition">
            <summary>
            指摘のカスタムフィールド定義の編集を実現するインタフェース
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.ICustomFieldDefinition.DisplayName">
            <summary>
            表示名
            他のフィールドと重複していても構わないが、空文字列にはできない。
            空文字列を指定した場合は、元の値に戻す。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.ICustomFieldDefinition.AllowedValues">
            <summary>
            選択肢のリストをカンマ区切りもしくは改行区切りで連結した文字列を設定する。
            選択肢のリストを改行区切りで連結した文字列を取得する。
            取得・設定ともリストの並び順と一致することを保証する。
            設定時は、既存項目と一致するものについては「説明」などの他情報を保持する。
            設定時は、カンマの前後に含まれる空白文字（スペース、タブ）と
            文字列中に含まれるすべての改行文字を無視する（削除する）。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.ICustomFieldDefinition.DefaultValue">
            <summary>
            デフォルト値
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.ICustomFieldDefinition.Enabled">
            <summary>
            フィールドを使用するか否か
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.LightningReview.IEntityCollection`1">
            <summary>
            エンティティのコレクションの操作を実現するインタフェースです。
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.IEntityCollection`1.Add">
            <summary>
            エンティティをコレクションに追加します。
            </summary>
            <returns>追加したエンティティ。</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.IEntityCollection`1.Remove(`0)">
            <summary>
            エンティティをコレクションから削除します。
            </summary>
            <param name="entity">削除するエンティティ。</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.IEntityCollection`1.RemoveAt(System.Int32)">
            <summary>
            インデックスを指定してエンティティをコレクションから削除します。
            </summary>
            <param name="index">削除するエンティティのインデックス。</param>
        </member>
        <member name="T:LightningReview.ExtensionFramework.LightningReview.IIssueImage">
            <summary>
            指摘画像の編集を実現するインタフェース
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.IIssueImage.Name">
            <summary>
            画像名(ID=1-1の修正画像の場合は'1-1'となる)
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.IIssueImage.Image">
            <summary>
            画像のイメージ
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.IIssueImage.ReportedImageNo">
            <summary>
            関連する指摘画像の番号(ID=1-1の修正画像の場合は'1'となる)
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.IIssueImage.ImageTemporaryFilePath">
            <summary>
            イメージ保存先のテンポラリフォルダのパス
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.LightningReview.IMemberCustomFieldDefinition">
            <summary>
            メンバのカスタムフィールド定義の編集を実現するインタフェース。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.IMemberCustomFieldDefinition.DisplayName">
            <summary>
            表示名を取得または設定します。
            他のフィールドと重複していても構いませんが、空文字列にはできません。
            空文字列を指定した場合は、元の値に戻します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.IMemberCustomFieldDefinition.Enabled">
            <summary>
            フィールドを使用するか否かを取得または設定します。
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.LightningReview.IMemberCustomRoleDefinition">
            <summary>
            メンバのカスタムロール定義の編集を実現するインタフェース。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.IMemberCustomRoleDefinition.DisplayName">
            <summary>
            表示名を取得または設定します。
            他のフィールドと重複していても構いませんが、空文字列にはできません。
            空文字列を指定した場合は、元の値に戻します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.IMemberCustomRoleDefinition.Enabled">
            <summary>
            フィールドを使用するか否かを取得または設定します。
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.LightningReview.IReview">
            <summary>
            レビューの操作を実現するインターフェース
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.IReview.FilePath">
            <summary>
            レビューファイルの絶対パスです
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.IReview.Documents">
            <summary>
            このレビューファイルに関連づくドキュメントのコレクション
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.IReview.IsDirty">
            <summary>
            レビューが変更されているか
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.IReview.ReviewSetting">
            <summary>
            レビューの設定オブジェクトを戻します
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.IReview.AddIssue(LightningReview.ExtensionFramework.IDocument)">
            <summary>
            対象のドキュメントに指摘を追加する
            </summary>
            <param name="document">ドキュメント</param>
            <returns>指摘</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.IReview.AddIssue(LightningReview.ExtensionFramework.IDocument,System.String)">
            <summary>
            対象のドキュメントのアウトラインパスで指定したアウトラインに指摘を追加する
            </summary>
            <param name="document">ドキュメント</param>
            <param name="outlinePath">アウトラインパス</param>
            <returns>指摘</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.IReview.AddIssue(LightningReview.ExtensionFramework.IOutlineNode)">
            <summary>
            対象のアウトラインに指摘を追加する
            </summary>
            <param name="node">アウトライン</param>
            <returns>指摘</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.IReview.GetAllIssues">
            <summary>
            レビューファイルに関連づく指摘を取得する
            </summary>
            <returns>指摘</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.IReview.GetIssue(System.String,System.Boolean)">
            <summary>
            指摘のIdを指定して指摘を取得する
            </summary>
            <param name="issueId">指摘ID</param>
            <param name="globalId">ローカルIDで検索：false, グローバルIDで検索：true</param>
            <returns>指摘</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.IReview.DeleteIssue(LightningReview.ExtensionFramework.IIssue)">
            <summary>
            指摘を削除する
            </summary>
            <param name="issue">指摘</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.IReview.DeleteIssueById(System.String,System.Boolean)">
            <summary>
            指定された指摘IDで指摘を削除する
            </summary>
            <param name="issueId">指摘ID</param>
            <param name="globalId">ローカルIDで削除：false, グローバルIDで削除：true</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.IReview.AddDocument">
            <summary>
            このコンテキストが保持しているレビューデータにドキュメントを追加する
            </summary>
            <returns>ドキュメント</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.IReview.AddDocument(System.String)">
            <summary>
            ファイル名を指定して、新規にドキュメントを追加する。
            作成したドキュメントは、このレビューのドキュメントとして登録されます。
            </summary>
            <param name="filePath">ファイルパス</param>
            <returns>ドキュメント</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.IReview.GetDocument(System.String)">
            <summary>
            指定したファイル名のドキュメントを戻します。
            ファイル名の大・小文字は区別しません。
            </summary>
            <param name="filePath">ファイル名(絶対パス)</param>
            <returns>ドキュメント</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.IReview.DeleteDocument(LightningReview.ExtensionFramework.IDocument)">
            <summary>
            既存のドキュメントを削除する
            </summary>
            <param name="document">削除するドキュメント</param>
        </member>
        <member name="T:LightningReview.ExtensionFramework.LightningReview.IReviewCustomFieldDefinition">
            <summary>
            レビューのカスタムフィールド定義の編集を実現するインターフェース。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.IReviewCustomFieldDefinition.DisplayName">
            <summary>
            表示名を取得または設定します。
            他のフィールドと重複していても構わないが、空文字列にはできません。
            空文字列を指定した場合は、元の値に戻します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.IReviewCustomFieldDefinition.AllowedValues">
            <summary>
            選択肢のリストをカンマ区切りもしくは改行区切りで連結した文字列を設定します。
            選択肢のリストを改行区切りで連結した文字列を取得します。
            取得・設定ともリストの並び順と一致することを保証します。
            設定時は、既存項目と一致するものについては「説明」などの他情報を保持します。
            設定時は、カンマの前後に含まれる空白文字（スペース、タブ）と
            文字列中に含まれるすべての改行文字を無視します（削除する）。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.IReviewCustomFieldDefinition.Enabled">
            <summary>
            フィールドを使用するか否かを取得または設定します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.LightningReview.IReviewCustomFieldDefinition.Group">
            <summary>
            所属するグループを取得または設定します。
            </summary>
            <value>
            所属するグループ。
            以下の値を設定できます。
            [値域]            [値に対応するグループ]
            General           基本設定
            Project           プロジェクト
            PlanAndActual     計画と実績 
            ApprovalStatus    承認ステータス
            </value>
        </member>
        <member name="T:LightningReview.ExtensionFramework.LightningReview.IReviewFileService">
            <summary>
            レビューファイルをReviewWindowを伴わずに編集を実現するサービスのインターフェース
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.IReviewFileService.NewReview">
            <summary>
            レビューを新規作成します
            </summary>
            <returns>レビュー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.IReviewFileService.OpenReview(System.String,System.Boolean)">
            <summary>
            レビューを開きます。
            開くことに失敗した場合はUserExceptionをthrowします。
            </summary>
            <param name="filepath">レビューファイルのパス</param>
            <param name="readOnly">
            読み取り専用として開くか
            読み取り専用で開くと、他のユーザーがレビューファイルを開いていても開くことができる。
            </param>
            <returns>開いたレビュー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.IReviewFileService.SaveReview(System.String,LightningReview.ExtensionFramework.LightningReview.IReview)">
            <summary>
            レビューを保存します
            </summary>
            <param name="filepath">レビューファイルのパス</param>
            <param name="review">レビュー</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.IReviewFileService.CloseReview(LightningReview.ExtensionFramework.LightningReview.IReview)">
            <summary>
            レビューを閉じます
            </summary>
            <param name="review">レビュー</param>
        </member>
        <member name="T:LightningReview.ExtensionFramework.LightningReview.IUndoTransaction">
            <summary>
            アンドゥのトランザクションを実現するインターフェース
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.IUndoTransaction.Commit">
            <summary>
            トランザクションを開始してからの編集をコミットします
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.LightningReview.IUndoTransaction.Rollback">
            <summary>
            トランザクションを開始してからの編集をロールバックします
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.IApp">
            <summary>
            アプリケーション操作のインタフェース内のイベント定義
            </summary>
            <summary>
            アプリケーションの操作を実現するインタフェース
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IApp.SuspendEvent">
            <summary>
            イベントの発生を一時的に抑制できます。
            イベントのハンドラで編集APIを呼び出した結果、イベントが再帰的に発生して無限ループになってしまう事を抑制できます。
            例えば、指摘の編集イベントを追加し、そのイベントで指摘を編集すると編集イベントが再度発生します。
            これを抑制するために、一時的に編集イベント内でSusupendEventを呼び出すことですべてのイベント発生を抑制できます。
            </summary>
            <returns></returns>
            <remarks>必ずusingで囲い、確実にサスペンドを解除するようにして下さい</remarks>
        </member>
        <member name="E:LightningReview.ExtensionFramework.IApp.Startup">
            <summary>
            アプリケーションの起動が完了したときに発生します
            </summary>
        </member>
        <member name="E:LightningReview.ExtensionFramework.IApp.BeforeQuit">
            <summary>
            アプリケーションの終了前には発生します。
            </summary>
        </member>
        <member name="E:LightningReview.ExtensionFramework.IApp.ReviewNew">
            <summary>
            レビューを新規作成すると発生します
            </summary>
        </member>
        <member name="E:LightningReview.ExtensionFramework.IApp.ReviewOpen">
            <summary>
            レビューファイルを開くと発生します
            </summary>
        </member>
        <member name="E:LightningReview.ExtensionFramework.IApp.ReviewBeforeSave">
            <summary>
            レビューの保存前に発生します。
            </summary>
        </member>
        <member name="E:LightningReview.ExtensionFramework.IApp.ReviewAfterSave">
            <summary>
            レビューの保存後に発生します。
            </summary>
        </member>
        <member name="E:LightningReview.ExtensionFramework.IApp.ReviewBeforeClose">
            <summary>
            レビューが閉じる前に発生します。
            </summary>
        </member>
        <member name="E:LightningReview.ExtensionFramework.IApp.ReviewAfterClose">
            <summary>
            レビューが閉じた後に発生します。
            </summary>
        </member>
        <member name="E:LightningReview.ExtensionFramework.IApp.IssueSelectionChanged">
            <summary>
            指摘の選択が変更された時に発生します
            </summary>
        </member>
        <member name="E:LightningReview.ExtensionFramework.IApp.IssueNew">
            <summary>
            指摘が新規作成されたときに発生します
            </summary>
        </member>
        <member name="E:LightningReview.ExtensionFramework.IApp.IssueEdit">
            <summary>
            指摘の属性が編集されたときに発生します
            </summary>
        </member>
        <member name="E:LightningReview.ExtensionFramework.IApp.IssueBeforeDelete">
            <summary>
            指摘が削除される前に発生します
            </summary>
        </member>
        <member name="E:LightningReview.ExtensionFramework.IApp.DocumentBeforeParse">
            <summary>
            ドキュメントのアウトライン解析の前に発生します。
            </summary>
        </member>
        <member name="E:LightningReview.ExtensionFramework.IApp.DocumentBeforeJump">
            <summary>
            ドキュメントへのジャンプの前に発生します。
            </summary>
        </member>
        <member name="E:LightningReview.ExtensionFramework.IApp.OutlineNodeBeforeJump">
            <summary>
            アウトラインノードへのジャンプの前に発生します。
            </summary>
        </member>
        <member name="E:LightningReview.ExtensionFramework.IApp.IssueLocationBeforeJump">
            <summary>
            指摘箇所へのジャンプの前に発生します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IApp.ReviewWindows">
            <summary>
            すべてのレビューウインドウを取得します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IApp.ActiveReviewWindow">
            <summary>
            アクティブなレビューウインドウを取得します。
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IApp.NewReviewWindow">
            <summary>
            新しいレビューウインドウを新規作成します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IApp.GetReviewWindowByFileName(System.String)">
            <summary>
            新しいレビューウィンドウで、指定したレビューファイルを開きます。
            </summary>
            <param name="filename">開くレビューファイル名</param>
            <returns>指定したレビューファイルを開いたレビューウィンドウ</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IApp.CloseAllReviewWindows">
            <summary>
            全てのレビューウインドウを閉じます。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IApp.ReviewExplorer">
            <summary>
            レビューエクスプローラを取得します。
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IApp.ShowReviewExplorer">
            <summary>
            レビューエクスプローラを表示します。
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IApp.RegisterDocumentParser``1">
            <summary>
            ドキュメントパーサを登録
            </summary>
            <typeparam name="T">対象のパーサクラス</typeparam>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IApp.RemoveDocumentParser``1">
            <summary>
            ドキュメントパーサを削除
            </summary>
            <typeparam name="T">対象のパーサクラス</typeparam>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IApp.Version">
            <summary>
            アプリケーションのバージョンを戻します。
            "1.7.0.0"のような文字列となります。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IApp.UserName">
            <summary>
            アプリケーションの現在のユーザ名を戻します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IApp.Theme">
            <summary>
            アプリケーションの現在のテーマを取得します。
            "Black","Silver"があります。
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IApp.Quit(System.Boolean)">
            <summary>
            アクティブなレビューウインドウを閉じます 
            </summary>
            <param name="discard">開いているファイルの変更を破棄して終了します</param>
            <returns>Cancelされるとfalseが戻ります</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IApp.Restart(System.Boolean)">
            <summary>
            アプリケーションを終了して再起動します
            </summary>
            <param name="discard">開いているファイルの変更を破棄して終了します</param>
            <returns>Cancelされるとfalseが戻ります</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IApp.GetReviewFileService">
            <summary>
            レビューファイルをReviewWindowを伴わずに編集を実現するサービスを取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IApp.TrackEvent(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            ユーザーが情報収集に同意している場合に限り、指定した引数の値でサーバーにログを登録する
            </summary>
            <param name="name">ログ名</param>
            <param name="properties">ログのパラメータ</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IHostApp.RegisterMenu(LightningReview.ExtensionFramework.IExtensionBase)">
            <summary>
            メニューのビルダーを戻します。
            </summary>
            <param name="Extension">エクステンション</param>
            <returns>メニューのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IHostApp.RegisterToolBarItem(LightningReview.ExtensionFramework.IExtensionBase)">
            <summary>
            ツールバーに追加するアイテムのビルダーを戻します。
            </summary>
            <param name="Extension">エクステンション</param>
            <returns>ツールバーに追加するアイテムのビルダー</returns>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IHostApp.ExtensionFolders">
            <summary>
            エクステンションをロードするフォルダ
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.IDocumentParser">
            <summary>
            ドキュメントのアウトライン解析を実現するインタフェース
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IDocumentParser.FileExtensions">
            <summary>
            対応した拡張子
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IDocumentParser.IsParserFor(System.String)">
            <summary>
            対象のパーサーであるかを検証してもどします
            </summary>
            <param name="filePath">ファイルパス</param>
            <returns>対象のパーサーであるか</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IDocumentParser.Parse(LightningReview.ExtensionFramework.IDocument)">
            <summary>
            パースする
            </summary>
            <param name="document">対象ドキュメント</param>
            <returns>パースが成功したか</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IDocumentParser.Jump(LightningReview.ExtensionFramework.IDocument,System.String)">
            <summary>
            ドキュメントの該当位置にジャンプ
            </summary>
            <param name="document">対象ドキュメント</param>
            <param name="physicalLocationXml">対象位置</param>
            <returns>ジャンプが成功したか</returns>
        </member>
        <member name="T:LightningReview.ExtensionFramework.IReviewSummary">
            <summary>
            レビューのサマリ情報を取得するためのインターフェース
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSummary.FileName">
            <summary>
            レビューファイルの名前
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSummary.FilePath">
            <summary>
            レビューファイルのパス
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSummary.Status">
            <summary>
            ステータス
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSummary.PlannedDate">
            <summary>
            計画実施日
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSummary.ActualDate">
            <summary>
            実績実施日
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSummary.AllIssueCount">
            <summary>
            指摘の総件数
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSummary.BugIssueCount">
            <summary>
            種別が「不具合」の指摘件数
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSummary.SuggestionIssueCount">
            <summary>
            種別が「指摘」の指摘件数
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSummary.NotRevisedIssueCount">
            <summary>
            未修正の件数
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSummary.RevisedIssueCount">
            <summary>
            修正済みの件数
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSummary.ConfirmedIssueCount">
            <summary>
            確認済みの件数
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSummary.NotNeedToFixIssueCount">
            <summary>
            対策不要の件数
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSummary.GoodPointIssueCount">
            <summary>
            グッドポイントの件数
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.IReviewMember">
            <summary>
            レビューメンバの編集を実現するインタフェース。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewMember.Name">
            <summary>
            メンバーの名前
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewMember.Reviewer">
            <summary>
            メンバーはレビューワか
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewMember.Reviewee">
            <summary>
            メンバーはレビューイか
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewMember.Moderator">
            <summary>
            メンバーは確認者か
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewMember.CustomRoles">
            <summary>
            カスタムロールの値を取得します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewMember.CustomFields">
            <summary>
            カスタムフィールドの値を取得します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewMember.Tag">
            <summary>
            UI非表示な情報をタグとして取得または設定します。
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.DocumentParser">
            <summary>
            ドキュメントのアウトライン解析クラス
            このクラスを派生してエクステンションで登録すれば、独自のパーサーが開発できます。
            docxのようにLightning Reviewがすでに対応しているアウトライン解析も置き換えることができます。
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.DocumentParser.m_FileExtensions">
            <summary>
            拡張機能で登録したパーサーの一覧
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.DocumentParser.FileExtensions">
            <summary>
            拡張機能で登録したパーサーの一覧
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.DocumentParser.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.DocumentParser.AddFileExtension(System.String)">
            <summary>
            対応した拡張子を追加します。
            </summary>
            <param name="extension"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.DocumentParser.IsFileExtensionSupported(System.String)">
            <summary>
            指定の拡張子のファイルに対応したパーサーかを戻します
            </summary>
            <param name="ext">拡張子</param>
            <returns></returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.DocumentParser.IsParserFor(System.String)">
            <summary>
            対象のパーサーであるかを検証してもどします
            </summary>
            <param name="filePath">ファイルパス</param>
            <returns>対象のパーサーであるか</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.DocumentParser.Jump(LightningReview.ExtensionFramework.IDocument,System.String)">
            <summary>
            ドキュメントの該当位置にジャンプ
            </summary>
            <param name="document">対象ドキュメント</param>
            <param name="physicalLocationXml">対象位置</param>
            <returns>ジャンプが成功したか</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.DocumentParser.Parse(LightningReview.ExtensionFramework.IDocument)">
            <summary>
            パースする
            </summary>
            <param name="document">対象ドキュメント</param>
            <returns>パースが成功したか</returns>
        </member>
        <member name="T:LightningReview.ExtensionFramework.DocumentParserExportAttribute">
            <summary>
            エクステンションとしてExportするための属性
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.DocumentParserExportAttribute.#ctor(System.String,System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="label">エクステンションの表示名</param>
            <param name="englishLabel">エクステンションの英語名</param>
        </member>
        <member name="P:LightningReview.ExtensionFramework.DocumentParserExportAttribute.Label">
            <summary>
            ドキュメントパーサの表示名
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.IDocumentParserMetadata">
            <summary>
            ドキュメントパーサのメタデータ
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.ExtensionFrameworkSettings">
            <summary>
            エクステンションの動作設定
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionFrameworkSettings.SupportExeFolder">
            <summary>
            実行フォルダにあるエクステンションをサポートするか
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionFrameworkSettings.SupportAppLocalFolder">
            <summary>
            AppDataにあるエクステンションのフォルダをサポートするか
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionFrameworkSettings.SupportPackageFolder">
            <summary>
            拡張機能でインストールしたパッケージのエクステンションのフォルダを対象にするか
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionFrameworkSettings.ExeExtensionFolderName">
            <summary>
            exeにあるエクステンションのフォルダ
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionFrameworkSettings.AppLocalFolderExtensionPath">
            <summary>
            AppData/Localにあるエクステンションのフォルダ
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionFrameworkSettings.GetExtensionFolders">
            <summary>
            エクステンションのフォルダ
            </summary>
            <returns></returns>
        </member>
        <member name="T:LightningReview.ExtensionFramework.IEntityBase">
            <summary>
            各エンティティに共通するプロパティの編集を実現するインターフェース
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IEntityBase.GID">
            <summary>
            グローバルID
            
            オブジェクトを一意に識別するためのID
            アプリケーション側でインスタンス生成ごとに割り当てて、永遠に変更しない。
            レビューファイルのマージで、同一インスタンスを識別するために使用する。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IEntityBase.Id">
            <summary>
            ローカルID
            
            ユーザがオブジェクトを識別するために使用するID
            インスタンス作成直後は不定値（ユーザには表示せず、内部的には定数値）とし、
            ファイルへ保存した時点で、ファイル内でユニークな連番を割り当てる。
            
            レビューごとに、そのデータ種別に対するユニーク性を保証する。
            つまり、あるレビューで同じLIDをもつエンティティは、データ種別ごとに最大1つである。
            データを削除した場合、そのLIDは欠番として再利用しない。
            最大のLIDをもつデータを削除した場合でも、再利用はしない。
            （つまり、過去に割り当てた最大値＋１を割り当てる）
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IEntityBase.CreatedBy">
            <summary>
            作成者
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IEntityBase.CreatedDateTime">
            <summary>
            作成日時
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IEntityBase.LastUpdatedBy">
            <summary>
            最終更新者
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IEntityBase.LastUpdatedDateTime">
            <summary>
            最終更新日時
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IEntityBase.MetaDatas">
            <summary>
            メタデータのコレクション
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IEntityBase.SetMetaData(System.String,System.Object,System.Boolean)">
            <summary>
            指定したキーのメタデータを設定する。
            すでにキーが存在している場合いは上書きする。
            </summary>
            <param name="key">キー</param>
            <param name="value">値</param>
            <param name="encrypt">値を暗号化するか(値がstring型の場合のみ暗号化可能)</param>
            <returns>設定したメタデータ</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IEntityBase.GetMetaData``1(System.String,``0,System.Boolean)">
            <summary>
            指定したキーのメタデータを取得する。
            </summary>
            <param name="key">キー</param>
            <param name="defaultValue">値が取得できなかった場合の値</param>
            <param name="decrypt">値を復号化するか</param>
            <returns>取得する値</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IEntityBase.RemoveMetaData(System.String)">
            <summary>
            指定したキーのメタデータを削除する。
            キーが存在しなければfalseを返す。
            </summary>
            <param name="key">キー</param>
            <returns>削除を実行したか</returns>
        </member>
        <member name="T:LightningReview.ExtensionFramework.IDocument">
            <summary>
            ドキュメントの編集を実現するインタフェースです。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IDocument.Name">
            <summary>
            ドキュメント名（表示用の名前）を取得・設定します。
            </summary>
            <value>ドキュメント名の文字列。</value>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IDocument.AbsolutePath">
            <summary>
            ドキュメントが所有する関連リンクのコレクションの先頭要素の絶対パスを取得・設定します。
            </summary>
            <value>関連リンクのコレクションの先頭要素の絶対パスの文字列。</value>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IDocument.DocumentLinks">
            <summary>
            ドキュメントに関連づくリンクの一覧を取得します。
            </summary>
            <value>ドキュメントに関連づくリンクの一覧。</value>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IDocument.OutlineTree">
            <summary>
            アウトラインツリーのルートノードを取得します。
            </summary>
            <value>アウトラインツリーのルートノード。</value>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IDocument.AllNodes">
            <summary>
            すべてのノードのアウトライン順コレクションを取得します。
            </summary>
            <remarks>
            取得できるコレクションは、深さ優先で全ノードを収集した結果のフラットなコレクションです。
            </remarks>
            <value> すべてのノードのアウトライン順コレクション。</value>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IDocument.ApplicationType">
            <summary>
            ドキュメントに関連づいているアプリケーションを取得・設定します。
            </summary>
            <value>
            ドキュメントに関連づいているアプリケーションの名前。
            "EXCEL","WORD","POWERPOINT","PDF"が取得・設定できます。
            アプリケーションが関連づいていない場合はnullです。
            </value>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IDocument.AddIssue">
            <summary>
            指摘を追加します。
            </summary>
            <returns>追加した指摘。</returns>
        </member>
        <member name="T:LightningReview.ExtensionFramework.IOutlineNode">
            <summary>
            アウトラインの編集を実現するインタフェース
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IOutlineNode.Name">
            <summary>
            ノード名
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IOutlineNode.PhysicalLocationXml">
            <summary>
            ドキュメントにおける物理位置をXML形式で表現したもの
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IOutlineNode.Path">
            <summary>
            ノードパス
            トップレベルからのノード名をデリミタ "/" で結合した文字列です。
            文字列の先頭にもデリミタが付きます。
            デリミタで区切られた最初のノード名は必ずドキュメント名になります。
            <example>
            以下の親子階層になっている場合、ノードパスは "/AAA/BBB/CCC" となります。
            　AAA -> BBB -> CCC
            </example>
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IOutlineNode.Level">
            <summary>
            アウトラインレベル
            トップレベルを１とした深さを表します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IOutlineNode.Document">
            <summary>
            このノードが属するドキュメント
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IOutlineNode.Parent">
            <summary>
            親ノード
            nullの場合はルートレベルのノードです。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IOutlineNode.ChildNodes">
            <summary>
            子ノードのアウトライン順コレクション
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IOutlineNode.Issues">
            <summary>
            このノードに関連付いている指摘のコレクション
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IOutlineNode.AddChild(System.String)">
            <summary>
            子にアウトラインを追加する
            </summary>
            <param name="nodeName"></param>
            <returns></returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IOutlineNode.AddChild(System.String,System.String)">
            <summary>
            ドキュメントにおける物理位置を指定して、子にアウトラインを追加する
            </summary>
            <param name="nodeName"></param>
            <param name="physicalLocationXml"></param>
            <returns></returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IOutlineNode.DeleteChild(LightningReview.ExtensionFramework.IOutlineNode)">
            <summary>
            子ノードを削除
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IOutlineNode.ClearChildren">
            <summary>
            子ノードをすべてクリア
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IOutlineNode.AddIssue">
            <summary>
            指摘を追加する
            </summary>
            <returns>指摘</returns>
        </member>
        <member name="T:LightningReview.ExtensionFramework.IReviewSetting">
            <summary>
            レビュー設定の編集を実現するインタフェース
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.Members">
            <summary>
            メンバ情報のコレクション
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.Name">
            <summary>
            レビュー名
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.Place">
            <summary>
            場所
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.Goal">
            <summary>
            目的
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.EndCondition">
            <summary>
            終了条件
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.ProjectName">
            <summary>
            プロジェクト名
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.ProjectCode">
            <summary>
            プロジェクトコード
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.UseCorrectionPolicyStatus">
            <summary>
            修正方針ステータスを使用するか
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.UseCorrectionPolicy">
            <summary>
            修正方針を記録するか
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.UseReason">
            <summary>
            指摘理由を記録するか
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.PlannedDate">
            <summary>
            計画実施日
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.ActualDate">
            <summary>
            実績実施日
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.PlannedTime">
            <summary>
            計画時間（分単位）
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.ActualTime">
            <summary>
            実績時間(分単位)
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.Unit">
            <summary>
            成果物単位
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.PlannedScale">
            <summary>
            予定規模
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.ActualScale">
            <summary>
            実績規模
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.IssueCountOfGoal">
            <summary>
            目標件数
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.IssueCountOfActual">
            <summary>
            実績件数
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.ReviewType">
            <summary>
            レビュー種別
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.ReviewTypeAllowedValues">
            <summary>
            レビュー種別の選択肢のリストをカンマ区切りもしくは改行区切りで連結した文字列を設定する。
            レビュー種別の選択肢のリストを改行区切りで連結した文字列を取得する。
            取得・設定ともリストの並び順と一致することを保証する。
            設定時は、既存項目と一致するものについては「説明」などの他情報を保持する。
            設定時は、カンマの前後に含まれる空白文字（スペース、タブ）と
            文字列中に含まれるすべての改行文字を無視する（削除する）。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.Domain">
            <summary>
            ドメイン
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.DomainAllowedValues">
            <summary>
            ドメインの選択肢のリストをカンマ区切りもしくは改行区切りで連結した文字列を設定する。
            ドメインの選択肢のリストを改行区切りで連結した文字列を取得する。
            取得・設定ともリストの並び順と一致することを保証する。
            設定時は、既存項目と一致するものについては「説明」などの他情報を保持する。
            設定時は、カンマの前後に含まれる空白文字（スペース、タブ）と
            文字列中に含まれるすべての改行文字を無視する（削除する）。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.Status">
            <summary>
            ステータス
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.StatusAllowedValues">
            <summary>
            ステータスの選択肢のリストをカンマ区切りもしくは改行区切りで連結した文字列を設定する。
            ステータスの選択肢のリストを改行区切りで連結した文字列を取得する。
            取得・設定ともリストの並び順と一致することを保証する。
            設定時は、既存項目と一致するものについては「説明」などの他情報を保持する。
            設定時は、カンマの前後に含まれる空白文字（スペース、タブ）と
            文字列中に含まれるすべての改行文字を無視する（削除する）。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.ReviewStyle">
            <summary>
            レビュー形式
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.ReviewStyleAllowedValues">
            <summary>
            レビュー形式の選択肢のリストをカンマ区切りもしくは改行区切りで連結した文字列を設定する。
            レビュー形式の選択肢のリストを改行区切りで連結した文字列を取得する。
            取得・設定ともリストの並び順と一致することを保証する。
            設定時は、既存項目と一致するものについては「説明」などの他情報を保持する。
            設定時は、カンマの前後に含まれる空白文字（スペース、タブ）と
            文字列中に含まれるすべての改行文字を無視する（削除する）。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.CategoryDefaultValue">
            <summary>
            分類のデフォルト値
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.CategoryAllowedValues">
            <summary>
            分類の選択肢のリストをカンマ区切りもしくは改行区切りで連結した文字列を設定する。
            分類の選択肢のリストを改行区切りで連結した文字列を取得する。
            取得・設定ともリストの並び順と一致することを保証する。
            設定時は、既存項目と一致するものについては「説明」などの他情報を保持する。
            設定時は、カンマの前後に含まれる空白文字（スペース、タブ）と
            文字列中に含まれるすべての改行文字を無視する（削除する）。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.DetectionActivityDefaultValue">
            <summary>
            検出工程のデフォルト値
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.DetectionActivityAllowedValues">
            <summary>
            検出工程の選択肢のリストをカンマ区切りもしくは改行区切りで連結した文字列を設定する。
            検出工程の選択肢のリストを改行区切りで連結した文字列を取得する。
            取得・設定ともリストの並び順と一致することを保証する。
            設定時は、既存項目と一致するものについては「説明」などの他情報を保持する。
            設定時は、カンマの前後に含まれる空白文字（スペース、タブ）と
            文字列中に含まれるすべての改行文字を無視する（削除する）。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.InjectionActivityDefaultValue">
            <summary>
            原因工程のデフォルト値
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.InjectionActivityAllowedValues">
            <summary>
            原因工程の選択肢のリストをカンマ区切りもしくは改行区切りで連結した文字列を設定する。
            原因工程の選択肢のリストを改行区切りで連結した文字列を取得する。
            取得・設定ともリストの並び順と一致することを保証する。
            設定時は、既存項目と一致するものについては「説明」などの他情報を保持する。
            設定時は、カンマの前後に含まれる空白文字（スペース、タブ）と
            文字列中に含まれるすべての改行文字を無視する（削除する）。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.ApprovalStatus">
            <summary>
            レビュー承認ステータスを取得または設定します。
            </summary>
            <value>
            レビュー承認ステータス。
            以下の値を設定できます。
            [値域]      [値に対応するステータス]
            Created     作成
            Examined    検討
            Approved    承認
            </value>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.Creator">
            <summary>
            レビュー作成者を取得または設定します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.DateCreated">
            <summary>
            レビュー作成日を取得または設定します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.Examiner">
            <summary>
            レビュー検討者を取得または設定します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.DateExamined">
            <summary>
            レビュー検討日を取得または設定します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.Approver">
            <summary>
            レビュー承認者を取得または設定します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.DateApproved">
            <summary>
            レビュー承認日を取得または設定します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.ReviewCustomFields">
            <summary>
            レビューのカスタムフィールドの値を取得します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.ReviewCustomFieldDefinitions">
            <summary>
            レビューのカスタムフィールドの定義を取得します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.MemberCustomRoleDefinitions">
            <summary>
            メンバのカスタムロールの定義を取得します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.MemberCustomFieldDefinitions">
            <summary>
            メンバのカスタムフィールドの定義を取得します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewSetting.CustomFields">
            <summary>
            指摘のカスタムフィールドの定義を取得します。
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewSetting.AddMember(System.String)">
            <summary>
            メンバの追加
            </summary>
            <param name="memberName">メンバ名</param>
            <returns>追加したメンバ</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewSetting.DeleteMember(LightningReview.ExtensionFramework.IReviewMember)">
            <summary>
            メンバの削除
            </summary>
            <param name="member">削除するメンバ</param>
        </member>
        <member name="T:LightningReview.ExtensionFramework.MenuBuilder">
            <summary>
            メニューのビルダークラス
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.MenuBuilder.Menu">
            <summary>
            本クラスで作成するメニュー
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.MenuBuilder.App">
            <summary>
            アプリケーション
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.MenuBuilder.Extension">
            <summary>
            エクステンション
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.MenuBuilder.MenuManager">
            <summary>
            メニューマネージャー
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.MenuBuilder.#ctor(LightningReview.ExtensionFramework.Host.MenuManager,LightningReview.ExtensionFramework.IHostApp,LightningReview.ExtensionFramework.IExtensionBase)">
            <summary>
            コンストラクタ
            </summary>
            <param name="manager">メニューマネージャー</param>
            <param name="app">アプリケーション</param>
            <param name="extension">エクステンション</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.MenuBuilder.Location(System.String)">
            <summary>
            メニューを設定する場所
            
            "ReviewWindow/MainMenu"
            "ReviewWindow/Issues/ContextMenu"
            
            </summary>
            <param name="location">メニューのロケーション</param>
            <returns>メニューのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.MenuBuilder.Command``1">
            <summary>
            実行するコマンドを設定する。
            </summary>
            <typeparam name="T">コマンドの型</typeparam>
            <returns>メニューのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.MenuBuilder.Parent(System.String)">
            <summary>
            このメニューを親としてメニューを作成します。
            メニューの表示名を指定して下さい。
            '|'で区切ると複数の選択肢を設定できます。日本語・英語に対応して検索できます。
            'ツール|tool'の場合は、「ツール」か「Tool」（大文字小文字区別しません）を含むメニューの子供に挿入します。
            </summary>
            <param name="parentMenu">親メニュー名</param>
            <returns>メニューのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.MenuBuilder.Top">
            <summary>
            メニューを挿入する場所を先頭に設定する
            </summary>
            <returns>メニューのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.MenuBuilder.Bottom">
            <summary>
            メニューを挿入する場所を末尾に設定する。
            </summary>
            <returns>メニューのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.MenuBuilder.After(System.String)">
            <summary>
            メニューを挿入する場所を兄弟として指定したメニューの後に設定する
            </summary>
            <param name="siblingMenu">兄弟メニュー名</param>
            <returns>メニューのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.MenuBuilder.Before(System.String)">
            <summary>
            メニューを挿入する場所を兄弟として指定したメニューの前に設定する
            </summary>
            <param name="siblingMenu">兄弟メニュー名</param>
            <returns>メニューのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.MenuBuilder.WithSeparatorBefore">
            <summary>
            セパレーターをメニューの直前に挿入する
            </summary>
            <returns>メニューのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.MenuBuilder.WithSeparatorAfter">
            <summary>
            セパレーターをメニューの直後に挿入する
            </summary>
            <returns>メニューのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.MenuBuilder.SetMenu">
            <summary>
            メニューとして振舞うように設定する(未実装なので利用しないでください)
            </summary>
            <returns>メニューのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.MenuBuilder.SetCheckableMenu(System.Boolean)">
            <summary>
            チェック状態の切り替えが可能なメニューとして振舞うように設定する(未実装なので利用しないでください)
            ExtensionCommandクラスのOnExecuteメソッドの引数でメニューをクリックした後のメニューのチェック状態(Menu.IsChecked)を渡します。
            OnExecuteメソッドの引数をbool型にキャストして、メニューのチェック状態を取得してください。
            OnExecuteメソッドの引数がtrueであれば、メニューを押したことによってメニューがチェック状態になったことを意味します。
            OnExecuteメソッドの引数がfalseであれば、メニューを押したことによってメニューがチェック状態でなくなったことを意味します。
            </summary>
            <param name="isChecked">チェック状態(デフォルト値)</param>
            <returns>メニューのビルダー</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.MenuBuilder.Build">
            <summary>
            本クラスで作成したメニューをUIとして構築するための準備を完了させる。
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.IIssue">
            <summary>
            指摘の編集を実現するインタフェース
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.CorrectionPolicy">
            <summary>
            修正方針
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.Review">
            <summary>
            この指摘が登録されているレビュー
            外部からは変更できません。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.DocumentID">
            <summary>
            対象ドキュメント
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.OutlineNode">
            <summary>
            関連付けられているアウトラインノード
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.Type">
             <summary>
             タイプ
             本プロパティの値域と、それぞれの値に対応するタイプを以下に示します。
            
             [値域]			[値に対応するタイプ]
             Bug				不具合
             Suggestion		指摘
             GoodPoint		グッドポイント
             </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.Category">
            <summary>
            分類
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.Description">
            <summary>
            説明
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.Reason">
            <summary>
            指摘理由
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.SendingBackReason">
            <summary>
            差し戻し理由
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.Status">
             <summary>
             指摘のステータスを取得または設定(差し戻し考慮なし)します。
             本プロパティの値域と、それぞれの値に対応するステータスを以下に示します。
            
             [値域]						[値に対応するステータス]
             NotRevised					未修正
             CorrectionPolicyExamined	修正方針検討済み
             CorrectionPolicyApproved	修正方針承認済み
             Revised						修正済み
             Confirmed					確認済み		
             </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.IsSendingBack">
            <summary>
            現在差戻し中かどうかをあらわすフラグ
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.HasBeenSentBack">
            <summary>
            過去に一度でも差し戻しがあったことを記録するフラグ
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.CanSendBack">
            <summary>
            差し戻すことができるか
            ステータスの変更に合わせてOnPropertyChangedを発行する
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.DetectionActivity">
            <summary>
            検出工程
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.InjectionActivity">
            <summary>
            原因工程
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.Priority">
             <summary>
             優先度
             本プロパティの値域と、それぞれの値に対応する優先度を以下に示します。
            
             [値域]			[値に対応する優先度]
             Low				低
             Middle			中
             High			高
             </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.Importance">
             <summary>
             重大度
             本プロパティの値域と、それぞれの値に対応する重大度を以下に示します。
            
             [値域]			[値に対応する重大度]
             Low				低
             Middle			中
             High			高
             </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.OutlineName">
            <summary>
            場所（関連付けられているアウトラインノードの名前）
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.RootOutlinePath">
            <summary>
            場所（ルートレベルのアウトラインノードの名前）
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.OutlinePath">
            <summary>
            場所
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.ReportedBy">
            <summary>
            報告者
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.DateReported">
            <summary>
            報告日
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.NeedToFix">
             <summary>
             対策要否
             本プロパティの値域と、それぞれの値に対応する対策要否を以下に示します。
            
             [値域]			[値に対応する対策要否]
             Yes				はい
             No				いいえ
             Suspended		保留
             </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.AssignedTo">
            <summary>
            修正者
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.DueDate">
            <summary>
            期日
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.DateFixed">
            <summary>
            修正日
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.Resolution">
            <summary>
            対策
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.ConfirmedBy">
            <summary>
            確認者
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.DateConfirmed">
            <summary>
            確認日
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.Comment">
            <summary>
            コメント
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.CustomText1">
            <summary>
            カスタムテキスト1
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.CustomText2">
            <summary>
            カスタムテキスト2
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.CustomText3">
            <summary>
            カスタムテキスト3
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.CustomText4">
            <summary>
            カスタムテキスト4
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.CustomText5">
            <summary>
            カスタムテキスト5
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.CustomText6">
            <summary>
            カスタムテキスト6
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.CustomText7">
            <summary>
            カスタムテキスト7
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.CustomText8">
            <summary>
            カスタムテキスト8
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.CustomText9">
            <summary>
            カスタムテキスト9
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.CustomText10">
            <summary>
            カスタムテキスト10
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.IsFiltered">
            <summary>
            指摘にフィルタがかかっているか
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.ReportedImageCount">
            <summary>
            指摘画像数
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.FixedImageCount">
            <summary>
            修正画像数
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IIssue.CustomFields">
            <summary>
            カスタムフィールドの値を取得します。
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IIssue.AddReportedImage(System.String)">
            <summary>
            指摘画像を追加する
            </summary>
            <param name="filePath">画像ファイルのパス</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IIssue.AddFixedImage(System.String,System.Int32)">
            <summary>
            修正画像を追加する
            </summary>
            <param name="filePath">画像ファイルのパス</param>
            <param name="imageNumber">関連付けたい指摘画像の番号</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IIssue.GetReportedImages">
            <summary>
            指摘画像の一覧を取得する
            </summary>
            <returns>指摘画像一覧</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IIssue.GetFixedImages">
            <summary>
            修正画像の一覧を取得する
            </summary>
            <returns>修正画像一覧</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IIssue.DeleteReportedImage(System.Int32)">
            <summary>
            指摘画像を削除する
            </summary>
            <param name="index">指摘画像のインデックス</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IIssue.DeleteFixedImage(System.Int32)">
            <summary>
            修正画像を削除する
            </summary>
            <param name="index">修正画像のインデックス</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IIssue.ClearAllReportedImages">
            <summary>
            全ての指摘画像を削除する
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IIssue.ClearAllFixedImages">
            <summary>
            全ての修正画像を削除する
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.IExtensionBase">
            <summary>
            エクステンションのI/Fクラス
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IExtensionBase.AppBase">
            <summary>
            アプリケーション
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IExtensionBase.Settings">
            <summary>
            エクステンションの設定を保存・復元します
            エクステンションのインストールフォルダにsettings.jsonを作成します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IExtensionBase.Id">
            <summary>
            エクステンションのId
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IExtensionBase.Name">
            <summary>
            エクステンションの名前
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IExtensionBase.InstallFolder">
            <summary>
            エクステンションがインストールされているフォルダ
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IExtensionBase.Deactivated">
            <summary>
            非アクティブ化したか
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IExtensionBase.Activate(LightningReview.ExtensionFramework.IHostApp)">
            <summary>
            エクステンションをアクティブ化します。
            </summary>
            <param name="app">アプリケーション</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IExtensionBase.Deactivate">
            <summary>
            エクステンションを非アクティブ化します。
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.IExtensionCommandBase">
            <summary>
            エクステンション用コマンドの機能を提供するインターフェイス
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IExtensionCommandBase.Title">
            <summary>
            コマンド名(メニュー名)
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IExtensionCommandBase.Description">
            <summary>
            コマンドの説明
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IExtensionCommandBase.IconResourceName">
            <summary>
            アイコンのリソース名
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IExtensionCommandBase.ResourceFileFullName">
            <summary>
            アイコンのリソースファイルの完全修飾名(拡張子は除く)。
            通常は使わないが、dotNet Coreへの拡張性を高めるために用意している。
            (dotNet CoreとdotNet Frameworkはリソースファイルのデフォルトパスが異なる。)
            例：'MyApplication.MyResource.Resources.resx' というリソース ファイルの場合は 'MyResource.Resources'となる。
            未設定の場合は、'[エクステンションのアセンブリ名].Properties.Resources'となる。 
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IExtensionCommandBase.Shortcut">
            <summary>
            ショートカットキーの表示文字列
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IExtensionCommandBase.Key">
            <summary>
            ショートカットキー
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IExtensionCommandBase.Modifiers">
            <summary>
            ショートカットキーを実行するための修飾キー
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IExtensionCommandBase.GetIconImage">
            <summary>
            アイコンのイメージを取得する
            </summary>
            <returns>アイコンのイメージ</returns>
        </member>
        <member name="T:LightningReview.ExtensionFramework.IReviewExplorer">
            <summary>
            レビューエクスプローラの編集を実現するインターフェース
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewExplorer.CurrentFolder">
            <summary>
            現在選択しているフォルダのパス
            未選択の場合は空文字を戻します
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewExplorer.IsVisible">
            <summary>
            ウィンドウを表示しているか
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewExplorer.IsActive">
            <summary>
            ウィンドウがアクティブか
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewExplorer.GetSelectedReviewFilePaths">
            <summary>
            現在選択しているレビューファイルのパスを取得します
            </summary>
            <returns>選択したレビューファイルのパス一覧</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewExplorer.GetSelectedReviewSummaries">
            <summary>
            現在選択しているレビューファイルのサマリを取得します
            </summary>
            <returns>選択したレビューのサマリ一覧</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewExplorer.GetReviewFiles">
            <summary>
            現在のフォルダのレビューファイルのパス一覧を取得します
            </summary>
            <returns>レビューファイルのパス一覧</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewExplorer.GetReviewSummaries">
            <summary>
            現在のフォルダのレビューのサマリ一覧を取得します
            </summary>
            <returns>レビューのサマリ一覧</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewExplorer.Reload">
            <summary>
            画面を再ロードします
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.IReviewWindow">
            <summary>
            レビューウィンドウの操作を実現するインタフェース
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewWindow.Review">
            <summary>
            レビューの操作を実現するインターフェース
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IReviewWindow.IsStartPageVisible">
            <summary>
            スタートページは表示中か
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewWindow.Activate">
            <summary>
            ウィンドウをアクティブにします
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewWindow.GetWindow">
            <summary>
            レビューウィンドウをWindow型で取得します
            </summary>
            <returns>対象のWindow</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewWindow.Open(System.String)">
            <summary>
            ファイルを指定して開きます。
            現在開いているファイルは閉じます
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewWindow.SaveAs(System.String)">
            <summary>
            ファイルを名前を付けて保存します。
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewWindow.Save">
            <summary>
            ファイルを上書き保存します。
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewWindow.Close(System.Boolean)">
            <summary>
            ウィンドウを閉じます
            </summary>
            <param name="discard">変更を無視して閉じる場合はtrue,変更している場合に閉じない場合はfalse</param>
            <returns>閉じたか</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewWindow.BeginEdit(System.Boolean)">
            <summary>
            編集の開始を指定します
            （特に指定しなくても編集は可能であるがアンドゥの単位を指定できます）
            必ずusingで囲ってください。
            </summary>
            <param name="autoCommit">トランザクションのDispose時に自動でコミットするか。
            trueの場合は自動でコミットします。
            falseの場合は戻り値のトランザクションを用いてCommit()を呼び出す必要があり、Commit()を呼び出さずにDisposeした場合は自動でRollBack()を呼び出します。</param>
            <returns>トランザクション</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewWindow.CompleteEditing">
            <summary>
            テキストボックスでの編集または画像の編集時に、その編集状態を確定します
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewWindow.GetSelectedIssues">
            <summary>
            選択した指摘を取得する
            </summary>
            <returns>指摘</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewWindow.SelectIssues(System.Collections.Generic.IEnumerable{LightningReview.ExtensionFramework.IIssue})">
            <summary>
            指摘を選択する。
            </summary>
            <param name="issues">選択したい指摘のリスト</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewWindow.ShowIssueDetailById(System.String,System.Boolean)">
            <summary>
            指摘のIdを指定して詳細ウィンドウを表示します
            </summary>
            <param name="issueId">対象となる指摘のId</param>
            <param name="globalId">GIDの場合はtrue,ローカルIdの場合はfalse</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewWindow.ApplyIdFilter(System.String)">
            <summary>
            指摘Idでフィルタします
            </summary>
            <param name="issueIds">対象となるIdのカンマ区切りの文字列で</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewWindow.GetSelectedDocuments">
            <summary>
            レビューウィンドウで選択されているドキュメントの一覧を戻します。
            </summary>
            <returns>
            選択されているドキュメントの一覧
            </returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewWindow.GetSelectedNodes">
            <summary>
            レビューウィンドウで選択されているアウトラインツリーのアウトラインの一覧を戻します。
            ドキュメントが選択されている場合、ドキュメントのルートノードを返します。
            </summary>
            <returns>
            選択されているアウトラインの一覧
            複数のドキュメントや親子階層で複数要素が選択されていてもそれらをすべて戻します。
            </returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewWindow.SelectOutlineNodes(System.Collections.Generic.IEnumerable{LightningReview.ExtensionFramework.IOutlineNode})">
            <summary>
            アウトラインツリーのアウトラインを選択します。
            ドキュメントを選択する場合、ドキュメントのルートノードを引数として渡してください。
            </summary>
            <param name="outlineNodes">選択したいアウトラインの一覧</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.IReviewWindow.ParseDocument(LightningReview.ExtensionFramework.IDocument,System.Int32)">
            <summary>
            ドキュメントの指定したインデックスのリンクでアウトライン解析します。
            </summary>
            <param name="document">ドキュメント。</param>
            <param name="documentLinkIndex">
            アウトライン解析するドキュメントリンクのインデックス。
            値域の最小値は0、最大値はドキュメントリンクの個数-1。
            </param>
        </member>
        <member name="T:LightningReview.ExtensionFramework.IExtensionSettings">
            <summary>
            エクステンションの設定を保存できます。
            アプリケーションのAppDataの下にextensionSettings.jsonを作成します。
            AppData/Local/DENSO CREATE/Lightning Review/extensionSettings.json
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Menu">
            <summary>
            メニュー情報
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Menu.App">
            <summary>
            アプリケーション
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Menu.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Menu.Location">
            <summary>
            ロケーション
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Menu.ParentMenu">
            <summary>
            親のメニュー名
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Menu.SiblingMenu">
            <summary>
            兄弟のメニュー名
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Menu.InsertPos">
            <summary>
            メニューの挿入位置
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Menu.Title">
            <summary>
            タイトル
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Menu.Shortcut">
            <summary>
            ショートカットキーの表示文字列
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Menu.Key">
            <summary>
            ショートカットキー
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Menu.Modifiers">
            <summary>
            ショートカットキーを実行するための修飾キー
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Menu.SeparatorInsertPos">
            <summary>
            セパレータの挿入位置
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Menu.Items">
            <summary>
            子要素として持つアイテム
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Menu.Command">
            <summary>
            実行するコマンド
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Menu.MenuType">
            <summary>
            種類
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Menu.IsChecked">
            <summary>
            チェック状態
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Menu.IsCheckable">
            <summary>
            チェックが可能か
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Menu.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Menu.#ctor(LightningReview.ExtensionFramework.IHostApp)">
            <summary>
            コンストラクタ
            </summary>
            <param name="app">アプリケーション</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Menu.#ctor(LightningReview.ExtensionFramework.IHostApp,System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="app">アプリケーション</param>
            <param name="location">ロケーション</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Menu.AddMenuItem(LightningReview.ExtensionFramework.Menu)">
            <summary>
            メニューを追加する
            </summary>
            <param name="menu">追加するメニュー</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Menu.ExecuteCommand">
            <summary>
            コマンドを実行する
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Menu.GetIconImage">
            <summary>
            アイコンのイメージを取得する
            </summary>
            <returns>アイコンのイメージ</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.Menu.Init">
            <summary>
            初期化する
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.ExtensionBase">
            <summary>
            エクステンションの実装クラス
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionBase.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionBase.Id">
            <summary>
            エクステンションのId
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionBase.AppBase">
            <summary>
            アプリケーション
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionBase.Settings">
            <summary>
            エクステンションの設定を保存・復元します
            エクステンションのインストールフォルダにsettings.jsonを作成します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionBase.Name">
            <summary>
            エクステンションの名前
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionBase.InstallFolder">
            <summary>
            エクステンションがインストールされているフォルダ
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionBase.SettingsFolder">
            <summary>
            エクステンションの設定の格納先フォルダ
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionBase.Deactivated">
            <summary>
            非アクティブ化したか
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionBase.SetFieldsFromMetadata">
            <summary>
            メタデータから属性を設定する
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionBase.Activate(LightningReview.ExtensionFramework.IHostApp)">
            <summary>
            エクステンションをアクティブ化します。
            </summary>
            <param name="app">アプリケーション</param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionBase.Deactivate">
            <summary>
            エクステンションを非アクティブ化します。
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionBase.RegisterMenu">
            <summary>
            メニューの登録を開始します。MenuBuilderオブジェクトを戻すのでそこで .Location(..)のように指定して下さい。
            </summary>
            <returns>MenuBuilderオブジェクト</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionBase.RegisterToolBarItem">
            <summary>
            ツールバーに追加するアイテムの登録を開始します。ToolBarItemBuilderオブジェクトを戻すのでそこで .Location(..)のように指定して下さい。
            </summary>
            <returns>ToolBarItemBuilderオブジェクト</returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionBase.OnBeforeActivate">
            <summary>
            エクステンションをアクティブ化する前に実行します
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionBase.OnBeforeDeactivate">
            <summary>
            エクステンションを非アクティブ化する前に実行します
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionBase.OnActivate">
            <summary>
            エクステンションがアクティブ化した時に実行します
            メニューの追加などの初期化コードを実装してください
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionBase.OnDeactivate">
            <summary>
            エクステンションが終了する前に実行します
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.ExtensionCommandBase">
            <summary>
            エクステンションのコマンドのベースクラス
            </summary>
        </member>
        <member name="F:LightningReview.ExtensionFramework.ExtensionCommandBase.m_IconImage">
            <summary>
            アイコンのイメージ
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionCommandBase.Title">
            <summary>
            コマンド名(メニュー名)
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionCommandBase.Shortcut">
            <summary>
            ショートカットの表示文字列
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionCommandBase.Key">
            <summary>
            ショートカットキー
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionCommandBase.Modifiers">
            <summary>
            ショートカットの修飾キー
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionCommandBase.Description">
            <summary>
            コマンドの説明
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionCommandBase.IconResourceName">
            <summary>
            アイコンのリソース名
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionCommandBase.ResourceFileFullName">
            <summary>
            アイコンのリソースファイルの完全修飾名(拡張子は除く)。
            通常は使わないが、dotNet Coreへの拡張性を高めるために用意している。
            (dotNet CoreとdotNet Frameworkはリソースファイルのデフォルトパスが異なる。)
            例：'MyApplication.MyResource.Resources.resx' というリソース ファイルの場合は 'MyResource.Resources'となる。
            未設定の場合は、'[エクステンションのアセンブリ名].Properties.Resources'となる。 
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionCommandBase.CreateCommand(LightningReview.ExtensionFramework.IHostApp,LightningReview.ExtensionFramework.IExtensionBase,System.Type)">
            <summary>
            コマンド作成
            </summary>
            <param name="app"></param>
            <param name="Extension"></param>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="E:LightningReview.ExtensionFramework.ExtensionCommandBase.CanExecuteChanged">
            <summary>
            実行できるかどうかの状態変更後イベント
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionCommandBase.CanExecute(System.Object)">
            <summary>
            実行可能か
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionCommandBase.OnCanExecute(System.Object)">
            <summary>
            実行できるか
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionCommandBase.Execute(System.Object)">
            <summary>
            コマンドの実行は例外でハンドリング
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionCommandBase.OnExecute(System.Object)">
            <summary>
            コマンドの実行
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionCommandBase.GetIconImage">
            <summary>
            アイコンのイメージを取得する
            </summary>
            <returns>アイコンのイメージ</returns>
        </member>
        <member name="T:LightningReview.ExtensionFramework.ExtensionExportAttribute">
            <summary>
            エクステンションとしてExportするための属性
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionExportAttribute.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="id"></param>
            <param name="label">エクステンションの表示名</param>
            <param name="englishLabel">エクステンションの英語名</param>
            <param name="minAppVersion">エクステンションを必須のアプリケーションバージョン</param>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionExportAttribute.Label">
            <summary>
            エクステンションの表示名
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionExportAttribute.EnglishLabel">
            <summary>
            エクステンションの表示名
            （言語が英語の場合の表示名）
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionExportAttribute.MinAppVersion">
            <summary>
            エクステンションを必須のアプリケーションバージョン
            "1.7.0.0"のように記述する
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.IExtensionMetadata">
            <summary>
            エクステンションのメタデータ
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IExtensionMetadata.Id">
            <summary>
            エクステンションのId
            設定のキーになります。ユニークな値にしてください。
            
            "MyCompany.MyExtension" のようにすると重複がないでしょう。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IExtensionMetadata.Label">
            <summary>
            エクステンションの表示名
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IExtensionMetadata.EnglishLabel">
            <summary>
            エクステンションの表示名
            （言語が英語の場合の表示名）
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.IExtensionMetadata.MinAppVersion">
            <summary>
            エクステンションを必須のアプリケーションバージョン
            "1.7.0.0"のように記述する
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.ExtensionObject">
            <summary>
            エクステンションのエクステンション、コマンドなどのクラスのベース
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.ThemeHelper">
            <summary>
            UIのテーマを設定する
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ThemeHelper.App">
            <summary>
            エクステンションのホストアプリ
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ThemeHelper.Background">
            <summary>
            ウィンドウの背景色
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ThemeHelper.Foreground">
            <summary>
            ウィンドウの前景色
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ThemeHelper.SetThemeColor(System.Windows.Window)">
            <summary>
            ウィンドウにテーマの色を設定する
            </summary>
            <param name="window"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ThemeHelper.SetCustomTheme(System.Windows.Media.SolidColorBrush,System.Windows.Media.SolidColorBrush)">
            <summary>
            任意のテーマに設定する
            </summary>
            <param name="background"></param>
            <param name="foreground"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ThemeHelper.ToSolidColorBrush(System.String)">
            <summary>
            Colorの文字列形式(#FFFFFFなど)をもとにSolidColorBrushを返す
            </summary>
            <param name="htmlColor"></param>
            <returns></returns>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionSettings.ExtensionId">
            <summary>
            エクステンションのId
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.ExtensionSettings.SettingFilePath">
            <summary>
            設定ファイルのパス
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionSettings.GetValue``1(System.String,``0)">
            <summary>
            取得
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="defaultValue">デフォルト値</param>
            <returns></returns>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionSettings.SetValue(System.String,System.Object)">
            <summary>
            設定
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionSettings.Load">
            <summary>
            設定のロード
            </summary>
        </member>
        <member name="M:LightningReview.ExtensionFramework.ExtensionSettings.Save">
            <summary>
            設定の保存
            </summary>
        </member>
        <member name="T:LightningReview.ExtensionFramework.Properties.Resources">
            <summary>
              ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.ResourceManager">
            <summary>
              このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.Culture">
            <summary>
              すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
              現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.Caption_Clear0">
            <summary>
              クリア に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.Caption_Friday0">
            <summary>
              金 に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.Caption_Monday0">
            <summary>
              月 に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.Caption_Saturday0">
            <summary>
              土 に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.Caption_Sunday0">
            <summary>
              日 に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.Caption_Thursday0">
            <summary>
              木 に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.Caption_Tuesday0">
            <summary>
              火 に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.Caption_Wednesday0">
            <summary>
              水 に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.CommandExecFailed1">
            <summary>
              `{0}` コマンドの実行に失敗しました。
            {1} に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.DefaultNullValueText_DateTimePicker0">
            <summary>
              なし に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.Exception_InvalidCommandType0">
            <summary>
              コマンドの型指定が間違っています。 に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.ExtensionError2">
             <summary>
               エクステンション {0} でエラーが発生しました。
            {1} に類似しているローカライズされた文字列を検索します。
             </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.ExtensionIdDuplicated3">
            <summary>
              エクステンション{0}のId &apos;{1}&apos; がエクステンション {2}のIdと重複しています。 に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.ExtensionInternalError2">
             <summary>
               エクステンション {0} でシステムエラーが発生しました。
            {1} に類似しているローカライズされた文字列を検索します。
             </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.ExtensionLoadFailed0">
            <summary>
              エクステンションのロードに失敗しました。 に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.ExtensionLoadFailed1">
             <summary>
               {0}
            上記の拡張機能の読み込みに失敗しました。[拡張機能の管理]ダイアログより、新しいバージョンに更新するか、アンインストールしてください。 に類似しているローカライズされた文字列を検索します。
             </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.ExtensionLoadFailed2">
             <summary>
               エクステンションのロードに失敗しました。
            
            エクステンション：{0} 
            エラー：{1} に類似しているローカライズされた文字列を検索します。
             </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.ExtensionMetadataNotFound2">
            <summary>
              エクステンション {0} のメタデータ{1} が未設定か間違っています。Idはアルファベットか数字・ハイフン・アンダースコアを用いて、他のエクステンションと重複しないようにして下さい。 に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.ExtensionUnloadFailed0">
            <summary>
              エクステンションのアンロードに失敗しました。 に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:LightningReview.ExtensionFramework.Properties.Resources.MessageBox_Title">
            <summary>
              Lightning Review に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
    </members>
</doc>
